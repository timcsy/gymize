// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: space.proto

public final class SpaceOuterClass {
  private SpaceOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code DataType}
   */
  public enum DataType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DATA_TYPE_UNSPECIFIED = 0;</code>
     */
    DATA_TYPE_UNSPECIFIED(0),
    /**
     * <code>DATA_TYPE_FLOAT = 1;</code>
     */
    DATA_TYPE_FLOAT(1),
    /**
     * <code>DATA_TYPE_DOUBLE = 2;</code>
     */
    DATA_TYPE_DOUBLE(2),
    /**
     * <code>DATA_TYPE_INT = 3;</code>
     */
    DATA_TYPE_INT(3),
    /**
     * <code>DATA_TYPE_LONG = 4;</code>
     */
    DATA_TYPE_LONG(4),
    /**
     * <code>DATA_TYPE_UINT = 5;</code>
     */
    DATA_TYPE_UINT(5),
    /**
     * <code>DATA_TYPE_ULONG = 6;</code>
     */
    DATA_TYPE_ULONG(6),
    /**
     * <code>DATA_TYPE_BOOL = 7;</code>
     */
    DATA_TYPE_BOOL(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DATA_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int DATA_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>DATA_TYPE_FLOAT = 1;</code>
     */
    public static final int DATA_TYPE_FLOAT_VALUE = 1;
    /**
     * <code>DATA_TYPE_DOUBLE = 2;</code>
     */
    public static final int DATA_TYPE_DOUBLE_VALUE = 2;
    /**
     * <code>DATA_TYPE_INT = 3;</code>
     */
    public static final int DATA_TYPE_INT_VALUE = 3;
    /**
     * <code>DATA_TYPE_LONG = 4;</code>
     */
    public static final int DATA_TYPE_LONG_VALUE = 4;
    /**
     * <code>DATA_TYPE_UINT = 5;</code>
     */
    public static final int DATA_TYPE_UINT_VALUE = 5;
    /**
     * <code>DATA_TYPE_ULONG = 6;</code>
     */
    public static final int DATA_TYPE_ULONG_VALUE = 6;
    /**
     * <code>DATA_TYPE_BOOL = 7;</code>
     */
    public static final int DATA_TYPE_BOOL_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DataType forNumber(int value) {
      switch (value) {
        case 0: return DATA_TYPE_UNSPECIFIED;
        case 1: return DATA_TYPE_FLOAT;
        case 2: return DATA_TYPE_DOUBLE;
        case 3: return DATA_TYPE_INT;
        case 4: return DATA_TYPE_LONG;
        case 5: return DATA_TYPE_UINT;
        case 6: return DATA_TYPE_ULONG;
        case 7: return DATA_TYPE_BOOL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DataType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
            public DataType findValueByNumber(int number) {
              return DataType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SpaceOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final DataType[] VALUES = values();

    public static DataType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DataType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DataType)
  }

  /**
   * Protobuf enum {@code CompressionType}
   */
  public enum CompressionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMPRESSION_TYPE_UNSPECIFIED = 0;</code>
     */
    COMPRESSION_TYPE_UNSPECIFIED(0),
    /**
     * <code>COMPRESSION_TYPE_NONE = 1;</code>
     */
    COMPRESSION_TYPE_NONE(1),
    /**
     * <code>COMPRESSION_TYPE_PNG = 2;</code>
     */
    COMPRESSION_TYPE_PNG(2),
    /**
     * <code>COMPRESSION_TYPE_JPG = 3;</code>
     */
    COMPRESSION_TYPE_JPG(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>COMPRESSION_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int COMPRESSION_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>COMPRESSION_TYPE_NONE = 1;</code>
     */
    public static final int COMPRESSION_TYPE_NONE_VALUE = 1;
    /**
     * <code>COMPRESSION_TYPE_PNG = 2;</code>
     */
    public static final int COMPRESSION_TYPE_PNG_VALUE = 2;
    /**
     * <code>COMPRESSION_TYPE_JPG = 3;</code>
     */
    public static final int COMPRESSION_TYPE_JPG_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CompressionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CompressionType forNumber(int value) {
      switch (value) {
        case 0: return COMPRESSION_TYPE_UNSPECIFIED;
        case 1: return COMPRESSION_TYPE_NONE;
        case 2: return COMPRESSION_TYPE_PNG;
        case 3: return COMPRESSION_TYPE_JPG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CompressionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CompressionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CompressionType>() {
            public CompressionType findValueByNumber(int number) {
              return CompressionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SpaceOuterClass.getDescriptor().getEnumTypes().get(1);
    }

    private static final CompressionType[] VALUES = values();

    public static CompressionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CompressionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CompressionType)
  }

  /**
   * Protobuf enum {@code SpaceType}
   */
  public enum SpaceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SPACE_TYPE_UNSPECIFIED = 0;</code>
     */
    SPACE_TYPE_UNSPECIFIED(0),
    /**
     * <code>SPACE_TYPE_RAW = 1;</code>
     */
    SPACE_TYPE_RAW(1),
    /**
     * <code>SPACE_TYPE_BOX = 2;</code>
     */
    SPACE_TYPE_BOX(2),
    /**
     * <code>SPACE_TYPE_DISCRETE = 3;</code>
     */
    SPACE_TYPE_DISCRETE(3),
    /**
     * <code>SPACE_TYPE_MULTI_BINARY = 4;</code>
     */
    SPACE_TYPE_MULTI_BINARY(4),
    /**
     * <code>SPACE_TYPE_MULTI_DISCRETE = 5;</code>
     */
    SPACE_TYPE_MULTI_DISCRETE(5),
    /**
     * <code>SPACE_TYPE_TEXT = 6;</code>
     */
    SPACE_TYPE_TEXT(6),
    /**
     * <code>SPACE_TYPE_DICT = 7;</code>
     */
    SPACE_TYPE_DICT(7),
    /**
     * <code>SPACE_TYPE_TUPLE = 8;</code>
     */
    SPACE_TYPE_TUPLE(8),
    /**
     * <code>SPACE_TYPE_SEQUENCE = 9;</code>
     */
    SPACE_TYPE_SEQUENCE(9),
    /**
     * <code>SPACE_TYPE_GRAPH = 10;</code>
     */
    SPACE_TYPE_GRAPH(10),
    /**
     * <code>SPACE_TYPE_IMAGE = 11;</code>
     */
    SPACE_TYPE_IMAGE(11),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SPACE_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int SPACE_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>SPACE_TYPE_RAW = 1;</code>
     */
    public static final int SPACE_TYPE_RAW_VALUE = 1;
    /**
     * <code>SPACE_TYPE_BOX = 2;</code>
     */
    public static final int SPACE_TYPE_BOX_VALUE = 2;
    /**
     * <code>SPACE_TYPE_DISCRETE = 3;</code>
     */
    public static final int SPACE_TYPE_DISCRETE_VALUE = 3;
    /**
     * <code>SPACE_TYPE_MULTI_BINARY = 4;</code>
     */
    public static final int SPACE_TYPE_MULTI_BINARY_VALUE = 4;
    /**
     * <code>SPACE_TYPE_MULTI_DISCRETE = 5;</code>
     */
    public static final int SPACE_TYPE_MULTI_DISCRETE_VALUE = 5;
    /**
     * <code>SPACE_TYPE_TEXT = 6;</code>
     */
    public static final int SPACE_TYPE_TEXT_VALUE = 6;
    /**
     * <code>SPACE_TYPE_DICT = 7;</code>
     */
    public static final int SPACE_TYPE_DICT_VALUE = 7;
    /**
     * <code>SPACE_TYPE_TUPLE = 8;</code>
     */
    public static final int SPACE_TYPE_TUPLE_VALUE = 8;
    /**
     * <code>SPACE_TYPE_SEQUENCE = 9;</code>
     */
    public static final int SPACE_TYPE_SEQUENCE_VALUE = 9;
    /**
     * <code>SPACE_TYPE_GRAPH = 10;</code>
     */
    public static final int SPACE_TYPE_GRAPH_VALUE = 10;
    /**
     * <code>SPACE_TYPE_IMAGE = 11;</code>
     */
    public static final int SPACE_TYPE_IMAGE_VALUE = 11;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SpaceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SpaceType forNumber(int value) {
      switch (value) {
        case 0: return SPACE_TYPE_UNSPECIFIED;
        case 1: return SPACE_TYPE_RAW;
        case 2: return SPACE_TYPE_BOX;
        case 3: return SPACE_TYPE_DISCRETE;
        case 4: return SPACE_TYPE_MULTI_BINARY;
        case 5: return SPACE_TYPE_MULTI_DISCRETE;
        case 6: return SPACE_TYPE_TEXT;
        case 7: return SPACE_TYPE_DICT;
        case 8: return SPACE_TYPE_TUPLE;
        case 9: return SPACE_TYPE_SEQUENCE;
        case 10: return SPACE_TYPE_GRAPH;
        case 11: return SPACE_TYPE_IMAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SpaceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SpaceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SpaceType>() {
            public SpaceType findValueByNumber(int number) {
              return SpaceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SpaceOuterClass.getDescriptor().getEnumTypes().get(2);
    }

    private static final SpaceType[] VALUES = values();

    public static SpaceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SpaceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SpaceType)
  }

  public interface TensorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Tensor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 shape = 1;</code>
     * @return A list containing the shape.
     */
    java.util.List<java.lang.Integer> getShapeList();
    /**
     * <code>repeated int32 shape = 1;</code>
     * @return The count of shape.
     */
    int getShapeCount();
    /**
     * <code>repeated int32 shape = 1;</code>
     * @param index The index of the element to return.
     * @return The shape at the given index.
     */
    int getShape(int index);

    /**
     * <code>.DataType data_type = 2;</code>
     * @return The enum numeric value on the wire for dataType.
     */
    int getDataTypeValue();
    /**
     * <code>.DataType data_type = 2;</code>
     * @return The dataType.
     */
    SpaceOuterClass.DataType getDataType();

    /**
     * <code>repeated float float_array = 3;</code>
     * @return A list containing the floatArray.
     */
    java.util.List<java.lang.Float> getFloatArrayList();
    /**
     * <code>repeated float float_array = 3;</code>
     * @return The count of floatArray.
     */
    int getFloatArrayCount();
    /**
     * <code>repeated float float_array = 3;</code>
     * @param index The index of the element to return.
     * @return The floatArray at the given index.
     */
    float getFloatArray(int index);

    /**
     * <code>repeated double double_array = 4;</code>
     * @return A list containing the doubleArray.
     */
    java.util.List<java.lang.Double> getDoubleArrayList();
    /**
     * <code>repeated double double_array = 4;</code>
     * @return The count of doubleArray.
     */
    int getDoubleArrayCount();
    /**
     * <code>repeated double double_array = 4;</code>
     * @param index The index of the element to return.
     * @return The doubleArray at the given index.
     */
    double getDoubleArray(int index);

    /**
     * <code>repeated sint32 int_array = 5;</code>
     * @return A list containing the intArray.
     */
    java.util.List<java.lang.Integer> getIntArrayList();
    /**
     * <code>repeated sint32 int_array = 5;</code>
     * @return The count of intArray.
     */
    int getIntArrayCount();
    /**
     * <code>repeated sint32 int_array = 5;</code>
     * @param index The index of the element to return.
     * @return The intArray at the given index.
     */
    int getIntArray(int index);

    /**
     * <code>repeated sint64 long_array = 6;</code>
     * @return A list containing the longArray.
     */
    java.util.List<java.lang.Long> getLongArrayList();
    /**
     * <code>repeated sint64 long_array = 6;</code>
     * @return The count of longArray.
     */
    int getLongArrayCount();
    /**
     * <code>repeated sint64 long_array = 6;</code>
     * @param index The index of the element to return.
     * @return The longArray at the given index.
     */
    long getLongArray(int index);

    /**
     * <code>repeated uint32 unsigned_int_array = 7;</code>
     * @return A list containing the unsignedIntArray.
     */
    java.util.List<java.lang.Integer> getUnsignedIntArrayList();
    /**
     * <code>repeated uint32 unsigned_int_array = 7;</code>
     * @return The count of unsignedIntArray.
     */
    int getUnsignedIntArrayCount();
    /**
     * <code>repeated uint32 unsigned_int_array = 7;</code>
     * @param index The index of the element to return.
     * @return The unsignedIntArray at the given index.
     */
    int getUnsignedIntArray(int index);

    /**
     * <code>repeated uint64 unsigned_long_array = 8;</code>
     * @return A list containing the unsignedLongArray.
     */
    java.util.List<java.lang.Long> getUnsignedLongArrayList();
    /**
     * <code>repeated uint64 unsigned_long_array = 8;</code>
     * @return The count of unsignedLongArray.
     */
    int getUnsignedLongArrayCount();
    /**
     * <code>repeated uint64 unsigned_long_array = 8;</code>
     * @param index The index of the element to return.
     * @return The unsignedLongArray at the given index.
     */
    long getUnsignedLongArray(int index);

    /**
     * <code>repeated bool bool_array = 9;</code>
     * @return A list containing the boolArray.
     */
    java.util.List<java.lang.Boolean> getBoolArrayList();
    /**
     * <code>repeated bool bool_array = 9;</code>
     * @return The count of boolArray.
     */
    int getBoolArrayCount();
    /**
     * <code>repeated bool bool_array = 9;</code>
     * @param index The index of the element to return.
     * @return The boolArray at the given index.
     */
    boolean getBoolArray(int index);
  }
  /**
   * Protobuf type {@code Tensor}
   */
  public static final class Tensor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Tensor)
      TensorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Tensor.newBuilder() to construct.
    private Tensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Tensor() {
      shape_ = emptyIntList();
      dataType_ = 0;
      floatArray_ = emptyFloatList();
      doubleArray_ = emptyDoubleList();
      intArray_ = emptyIntList();
      longArray_ = emptyLongList();
      unsignedIntArray_ = emptyIntList();
      unsignedLongArray_ = emptyLongList();
      boolArray_ = emptyBooleanList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Tensor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Tensor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                shape_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              shape_.addInt(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                shape_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                shape_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              dataType_ = rawValue;
              break;
            }
            case 29: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                floatArray_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              floatArray_.addFloat(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                floatArray_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                floatArray_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 33: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                doubleArray_ = newDoubleList();
                mutable_bitField0_ |= 0x00000004;
              }
              doubleArray_.addDouble(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                doubleArray_ = newDoubleList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                doubleArray_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                intArray_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              intArray_.addInt(input.readSInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                intArray_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                intArray_.addInt(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                longArray_ = newLongList();
                mutable_bitField0_ |= 0x00000010;
              }
              longArray_.addLong(input.readSInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                longArray_ = newLongList();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                longArray_.addLong(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                unsignedIntArray_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              unsignedIntArray_.addInt(input.readUInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
                unsignedIntArray_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                unsignedIntArray_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                unsignedLongArray_ = newLongList();
                mutable_bitField0_ |= 0x00000040;
              }
              unsignedLongArray_.addLong(input.readUInt64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) != 0) && input.getBytesUntilLimit() > 0) {
                unsignedLongArray_ = newLongList();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                unsignedLongArray_.addLong(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                boolArray_ = newBooleanList();
                mutable_bitField0_ |= 0x00000080;
              }
              boolArray_.addBoolean(input.readBool());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                boolArray_ = newBooleanList();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                boolArray_.addBoolean(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          shape_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          floatArray_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          doubleArray_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          intArray_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          longArray_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          unsignedIntArray_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          unsignedLongArray_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          boolArray_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SpaceOuterClass.internal_static_Tensor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SpaceOuterClass.internal_static_Tensor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SpaceOuterClass.Tensor.class, SpaceOuterClass.Tensor.Builder.class);
    }

    public static final int SHAPE_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList shape_;
    /**
     * <code>repeated int32 shape = 1;</code>
     * @return A list containing the shape.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getShapeList() {
      return shape_;
    }
    /**
     * <code>repeated int32 shape = 1;</code>
     * @return The count of shape.
     */
    public int getShapeCount() {
      return shape_.size();
    }
    /**
     * <code>repeated int32 shape = 1;</code>
     * @param index The index of the element to return.
     * @return The shape at the given index.
     */
    public int getShape(int index) {
      return shape_.getInt(index);
    }
    private int shapeMemoizedSerializedSize = -1;

    public static final int DATA_TYPE_FIELD_NUMBER = 2;
    private int dataType_;
    /**
     * <code>.DataType data_type = 2;</code>
     * @return The enum numeric value on the wire for dataType.
     */
    @java.lang.Override public int getDataTypeValue() {
      return dataType_;
    }
    /**
     * <code>.DataType data_type = 2;</code>
     * @return The dataType.
     */
    @java.lang.Override public SpaceOuterClass.DataType getDataType() {
      @SuppressWarnings("deprecation")
      SpaceOuterClass.DataType result = SpaceOuterClass.DataType.valueOf(dataType_);
      return result == null ? SpaceOuterClass.DataType.UNRECOGNIZED : result;
    }

    public static final int FLOAT_ARRAY_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.FloatList floatArray_;
    /**
     * <code>repeated float float_array = 3;</code>
     * @return A list containing the floatArray.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getFloatArrayList() {
      return floatArray_;
    }
    /**
     * <code>repeated float float_array = 3;</code>
     * @return The count of floatArray.
     */
    public int getFloatArrayCount() {
      return floatArray_.size();
    }
    /**
     * <code>repeated float float_array = 3;</code>
     * @param index The index of the element to return.
     * @return The floatArray at the given index.
     */
    public float getFloatArray(int index) {
      return floatArray_.getFloat(index);
    }
    private int floatArrayMemoizedSerializedSize = -1;

    public static final int DOUBLE_ARRAY_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.DoubleList doubleArray_;
    /**
     * <code>repeated double double_array = 4;</code>
     * @return A list containing the doubleArray.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getDoubleArrayList() {
      return doubleArray_;
    }
    /**
     * <code>repeated double double_array = 4;</code>
     * @return The count of doubleArray.
     */
    public int getDoubleArrayCount() {
      return doubleArray_.size();
    }
    /**
     * <code>repeated double double_array = 4;</code>
     * @param index The index of the element to return.
     * @return The doubleArray at the given index.
     */
    public double getDoubleArray(int index) {
      return doubleArray_.getDouble(index);
    }
    private int doubleArrayMemoizedSerializedSize = -1;

    public static final int INT_ARRAY_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.IntList intArray_;
    /**
     * <code>repeated sint32 int_array = 5;</code>
     * @return A list containing the intArray.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getIntArrayList() {
      return intArray_;
    }
    /**
     * <code>repeated sint32 int_array = 5;</code>
     * @return The count of intArray.
     */
    public int getIntArrayCount() {
      return intArray_.size();
    }
    /**
     * <code>repeated sint32 int_array = 5;</code>
     * @param index The index of the element to return.
     * @return The intArray at the given index.
     */
    public int getIntArray(int index) {
      return intArray_.getInt(index);
    }
    private int intArrayMemoizedSerializedSize = -1;

    public static final int LONG_ARRAY_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.LongList longArray_;
    /**
     * <code>repeated sint64 long_array = 6;</code>
     * @return A list containing the longArray.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getLongArrayList() {
      return longArray_;
    }
    /**
     * <code>repeated sint64 long_array = 6;</code>
     * @return The count of longArray.
     */
    public int getLongArrayCount() {
      return longArray_.size();
    }
    /**
     * <code>repeated sint64 long_array = 6;</code>
     * @param index The index of the element to return.
     * @return The longArray at the given index.
     */
    public long getLongArray(int index) {
      return longArray_.getLong(index);
    }
    private int longArrayMemoizedSerializedSize = -1;

    public static final int UNSIGNED_INT_ARRAY_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.IntList unsignedIntArray_;
    /**
     * <code>repeated uint32 unsigned_int_array = 7;</code>
     * @return A list containing the unsignedIntArray.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getUnsignedIntArrayList() {
      return unsignedIntArray_;
    }
    /**
     * <code>repeated uint32 unsigned_int_array = 7;</code>
     * @return The count of unsignedIntArray.
     */
    public int getUnsignedIntArrayCount() {
      return unsignedIntArray_.size();
    }
    /**
     * <code>repeated uint32 unsigned_int_array = 7;</code>
     * @param index The index of the element to return.
     * @return The unsignedIntArray at the given index.
     */
    public int getUnsignedIntArray(int index) {
      return unsignedIntArray_.getInt(index);
    }
    private int unsignedIntArrayMemoizedSerializedSize = -1;

    public static final int UNSIGNED_LONG_ARRAY_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.LongList unsignedLongArray_;
    /**
     * <code>repeated uint64 unsigned_long_array = 8;</code>
     * @return A list containing the unsignedLongArray.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getUnsignedLongArrayList() {
      return unsignedLongArray_;
    }
    /**
     * <code>repeated uint64 unsigned_long_array = 8;</code>
     * @return The count of unsignedLongArray.
     */
    public int getUnsignedLongArrayCount() {
      return unsignedLongArray_.size();
    }
    /**
     * <code>repeated uint64 unsigned_long_array = 8;</code>
     * @param index The index of the element to return.
     * @return The unsignedLongArray at the given index.
     */
    public long getUnsignedLongArray(int index) {
      return unsignedLongArray_.getLong(index);
    }
    private int unsignedLongArrayMemoizedSerializedSize = -1;

    public static final int BOOL_ARRAY_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.BooleanList boolArray_;
    /**
     * <code>repeated bool bool_array = 9;</code>
     * @return A list containing the boolArray.
     */
    @java.lang.Override
    public java.util.List<java.lang.Boolean>
        getBoolArrayList() {
      return boolArray_;
    }
    /**
     * <code>repeated bool bool_array = 9;</code>
     * @return The count of boolArray.
     */
    public int getBoolArrayCount() {
      return boolArray_.size();
    }
    /**
     * <code>repeated bool bool_array = 9;</code>
     * @param index The index of the element to return.
     * @return The boolArray at the given index.
     */
    public boolean getBoolArray(int index) {
      return boolArray_.getBoolean(index);
    }
    private int boolArrayMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getShapeList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(shapeMemoizedSerializedSize);
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeInt32NoTag(shape_.getInt(i));
      }
      if (dataType_ != SpaceOuterClass.DataType.DATA_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, dataType_);
      }
      if (getFloatArrayList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(floatArrayMemoizedSerializedSize);
      }
      for (int i = 0; i < floatArray_.size(); i++) {
        output.writeFloatNoTag(floatArray_.getFloat(i));
      }
      if (getDoubleArrayList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(doubleArrayMemoizedSerializedSize);
      }
      for (int i = 0; i < doubleArray_.size(); i++) {
        output.writeDoubleNoTag(doubleArray_.getDouble(i));
      }
      if (getIntArrayList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(intArrayMemoizedSerializedSize);
      }
      for (int i = 0; i < intArray_.size(); i++) {
        output.writeSInt32NoTag(intArray_.getInt(i));
      }
      if (getLongArrayList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(longArrayMemoizedSerializedSize);
      }
      for (int i = 0; i < longArray_.size(); i++) {
        output.writeSInt64NoTag(longArray_.getLong(i));
      }
      if (getUnsignedIntArrayList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(unsignedIntArrayMemoizedSerializedSize);
      }
      for (int i = 0; i < unsignedIntArray_.size(); i++) {
        output.writeUInt32NoTag(unsignedIntArray_.getInt(i));
      }
      if (getUnsignedLongArrayList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(unsignedLongArrayMemoizedSerializedSize);
      }
      for (int i = 0; i < unsignedLongArray_.size(); i++) {
        output.writeUInt64NoTag(unsignedLongArray_.getLong(i));
      }
      if (getBoolArrayList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(boolArrayMemoizedSerializedSize);
      }
      for (int i = 0; i < boolArray_.size(); i++) {
        output.writeBoolNoTag(boolArray_.getBoolean(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < shape_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(shape_.getInt(i));
        }
        size += dataSize;
        if (!getShapeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        shapeMemoizedSerializedSize = dataSize;
      }
      if (dataType_ != SpaceOuterClass.DataType.DATA_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, dataType_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatArrayList().size();
        size += dataSize;
        if (!getFloatArrayList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        floatArrayMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleArrayList().size();
        size += dataSize;
        if (!getDoubleArrayList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        doubleArrayMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intArray_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(intArray_.getInt(i));
        }
        size += dataSize;
        if (!getIntArrayList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        intArrayMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < longArray_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(longArray_.getLong(i));
        }
        size += dataSize;
        if (!getLongArrayList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        longArrayMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < unsignedIntArray_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(unsignedIntArray_.getInt(i));
        }
        size += dataSize;
        if (!getUnsignedIntArrayList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        unsignedIntArrayMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < unsignedLongArray_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(unsignedLongArray_.getLong(i));
        }
        size += dataSize;
        if (!getUnsignedLongArrayList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        unsignedLongArrayMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBoolArrayList().size();
        size += dataSize;
        if (!getBoolArrayList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        boolArrayMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SpaceOuterClass.Tensor)) {
        return super.equals(obj);
      }
      SpaceOuterClass.Tensor other = (SpaceOuterClass.Tensor) obj;

      if (!getShapeList()
          .equals(other.getShapeList())) return false;
      if (dataType_ != other.dataType_) return false;
      if (!getFloatArrayList()
          .equals(other.getFloatArrayList())) return false;
      if (!getDoubleArrayList()
          .equals(other.getDoubleArrayList())) return false;
      if (!getIntArrayList()
          .equals(other.getIntArrayList())) return false;
      if (!getLongArrayList()
          .equals(other.getLongArrayList())) return false;
      if (!getUnsignedIntArrayList()
          .equals(other.getUnsignedIntArrayList())) return false;
      if (!getUnsignedLongArrayList()
          .equals(other.getUnsignedLongArrayList())) return false;
      if (!getBoolArrayList()
          .equals(other.getBoolArrayList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getShapeCount() > 0) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShapeList().hashCode();
      }
      hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + dataType_;
      if (getFloatArrayCount() > 0) {
        hash = (37 * hash) + FLOAT_ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getFloatArrayList().hashCode();
      }
      if (getDoubleArrayCount() > 0) {
        hash = (37 * hash) + DOUBLE_ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getDoubleArrayList().hashCode();
      }
      if (getIntArrayCount() > 0) {
        hash = (37 * hash) + INT_ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getIntArrayList().hashCode();
      }
      if (getLongArrayCount() > 0) {
        hash = (37 * hash) + LONG_ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getLongArrayList().hashCode();
      }
      if (getUnsignedIntArrayCount() > 0) {
        hash = (37 * hash) + UNSIGNED_INT_ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getUnsignedIntArrayList().hashCode();
      }
      if (getUnsignedLongArrayCount() > 0) {
        hash = (37 * hash) + UNSIGNED_LONG_ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getUnsignedLongArrayList().hashCode();
      }
      if (getBoolArrayCount() > 0) {
        hash = (37 * hash) + BOOL_ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getBoolArrayList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SpaceOuterClass.Tensor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Tensor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Tensor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Tensor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Tensor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Tensor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Tensor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Tensor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.Tensor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Tensor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.Tensor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Tensor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SpaceOuterClass.Tensor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Tensor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Tensor)
        SpaceOuterClass.TensorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SpaceOuterClass.internal_static_Tensor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SpaceOuterClass.internal_static_Tensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SpaceOuterClass.Tensor.class, SpaceOuterClass.Tensor.Builder.class);
      }

      // Construct using SpaceOuterClass.Tensor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        shape_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        dataType_ = 0;

        floatArray_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        doubleArray_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000004);
        intArray_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        longArray_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000010);
        unsignedIntArray_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        unsignedLongArray_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000040);
        boolArray_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SpaceOuterClass.internal_static_Tensor_descriptor;
      }

      @java.lang.Override
      public SpaceOuterClass.Tensor getDefaultInstanceForType() {
        return SpaceOuterClass.Tensor.getDefaultInstance();
      }

      @java.lang.Override
      public SpaceOuterClass.Tensor build() {
        SpaceOuterClass.Tensor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SpaceOuterClass.Tensor buildPartial() {
        SpaceOuterClass.Tensor result = new SpaceOuterClass.Tensor(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          shape_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.shape_ = shape_;
        result.dataType_ = dataType_;
        if (((bitField0_ & 0x00000002) != 0)) {
          floatArray_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.floatArray_ = floatArray_;
        if (((bitField0_ & 0x00000004) != 0)) {
          doubleArray_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.doubleArray_ = doubleArray_;
        if (((bitField0_ & 0x00000008) != 0)) {
          intArray_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.intArray_ = intArray_;
        if (((bitField0_ & 0x00000010) != 0)) {
          longArray_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.longArray_ = longArray_;
        if (((bitField0_ & 0x00000020) != 0)) {
          unsignedIntArray_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.unsignedIntArray_ = unsignedIntArray_;
        if (((bitField0_ & 0x00000040) != 0)) {
          unsignedLongArray_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.unsignedLongArray_ = unsignedLongArray_;
        if (((bitField0_ & 0x00000080) != 0)) {
          boolArray_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.boolArray_ = boolArray_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SpaceOuterClass.Tensor) {
          return mergeFrom((SpaceOuterClass.Tensor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SpaceOuterClass.Tensor other) {
        if (other == SpaceOuterClass.Tensor.getDefaultInstance()) return this;
        if (!other.shape_.isEmpty()) {
          if (shape_.isEmpty()) {
            shape_ = other.shape_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureShapeIsMutable();
            shape_.addAll(other.shape_);
          }
          onChanged();
        }
        if (other.dataType_ != 0) {
          setDataTypeValue(other.getDataTypeValue());
        }
        if (!other.floatArray_.isEmpty()) {
          if (floatArray_.isEmpty()) {
            floatArray_ = other.floatArray_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFloatArrayIsMutable();
            floatArray_.addAll(other.floatArray_);
          }
          onChanged();
        }
        if (!other.doubleArray_.isEmpty()) {
          if (doubleArray_.isEmpty()) {
            doubleArray_ = other.doubleArray_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDoubleArrayIsMutable();
            doubleArray_.addAll(other.doubleArray_);
          }
          onChanged();
        }
        if (!other.intArray_.isEmpty()) {
          if (intArray_.isEmpty()) {
            intArray_ = other.intArray_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureIntArrayIsMutable();
            intArray_.addAll(other.intArray_);
          }
          onChanged();
        }
        if (!other.longArray_.isEmpty()) {
          if (longArray_.isEmpty()) {
            longArray_ = other.longArray_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureLongArrayIsMutable();
            longArray_.addAll(other.longArray_);
          }
          onChanged();
        }
        if (!other.unsignedIntArray_.isEmpty()) {
          if (unsignedIntArray_.isEmpty()) {
            unsignedIntArray_ = other.unsignedIntArray_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUnsignedIntArrayIsMutable();
            unsignedIntArray_.addAll(other.unsignedIntArray_);
          }
          onChanged();
        }
        if (!other.unsignedLongArray_.isEmpty()) {
          if (unsignedLongArray_.isEmpty()) {
            unsignedLongArray_ = other.unsignedLongArray_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureUnsignedLongArrayIsMutable();
            unsignedLongArray_.addAll(other.unsignedLongArray_);
          }
          onChanged();
        }
        if (!other.boolArray_.isEmpty()) {
          if (boolArray_.isEmpty()) {
            boolArray_ = other.boolArray_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureBoolArrayIsMutable();
            boolArray_.addAll(other.boolArray_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SpaceOuterClass.Tensor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SpaceOuterClass.Tensor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList shape_ = emptyIntList();
      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          shape_ = mutableCopy(shape_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 shape = 1;</code>
       * @return A list containing the shape.
       */
      public java.util.List<java.lang.Integer>
          getShapeList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(shape_) : shape_;
      }
      /**
       * <code>repeated int32 shape = 1;</code>
       * @return The count of shape.
       */
      public int getShapeCount() {
        return shape_.size();
      }
      /**
       * <code>repeated int32 shape = 1;</code>
       * @param index The index of the element to return.
       * @return The shape at the given index.
       */
      public int getShape(int index) {
        return shape_.getInt(index);
      }
      /**
       * <code>repeated int32 shape = 1;</code>
       * @param index The index to set the value at.
       * @param value The shape to set.
       * @return This builder for chaining.
       */
      public Builder setShape(
          int index, int value) {
        ensureShapeIsMutable();
        shape_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shape = 1;</code>
       * @param value The shape to add.
       * @return This builder for chaining.
       */
      public Builder addShape(int value) {
        ensureShapeIsMutable();
        shape_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shape = 1;</code>
       * @param values The shape to add.
       * @return This builder for chaining.
       */
      public Builder addAllShape(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureShapeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, shape_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shape = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearShape() {
        shape_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int dataType_ = 0;
      /**
       * <code>.DataType data_type = 2;</code>
       * @return The enum numeric value on the wire for dataType.
       */
      @java.lang.Override public int getDataTypeValue() {
        return dataType_;
      }
      /**
       * <code>.DataType data_type = 2;</code>
       * @param value The enum numeric value on the wire for dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataTypeValue(int value) {
        
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.DataType data_type = 2;</code>
       * @return The dataType.
       */
      @java.lang.Override
      public SpaceOuterClass.DataType getDataType() {
        @SuppressWarnings("deprecation")
        SpaceOuterClass.DataType result = SpaceOuterClass.DataType.valueOf(dataType_);
        return result == null ? SpaceOuterClass.DataType.UNRECOGNIZED : result;
      }
      /**
       * <code>.DataType data_type = 2;</code>
       * @param value The dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataType(SpaceOuterClass.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dataType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.DataType data_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataType() {
        
        dataType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList floatArray_ = emptyFloatList();
      private void ensureFloatArrayIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          floatArray_ = mutableCopy(floatArray_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float float_array = 3;</code>
       * @return A list containing the floatArray.
       */
      public java.util.List<java.lang.Float>
          getFloatArrayList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(floatArray_) : floatArray_;
      }
      /**
       * <code>repeated float float_array = 3;</code>
       * @return The count of floatArray.
       */
      public int getFloatArrayCount() {
        return floatArray_.size();
      }
      /**
       * <code>repeated float float_array = 3;</code>
       * @param index The index of the element to return.
       * @return The floatArray at the given index.
       */
      public float getFloatArray(int index) {
        return floatArray_.getFloat(index);
      }
      /**
       * <code>repeated float float_array = 3;</code>
       * @param index The index to set the value at.
       * @param value The floatArray to set.
       * @return This builder for chaining.
       */
      public Builder setFloatArray(
          int index, float value) {
        ensureFloatArrayIsMutable();
        floatArray_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_array = 3;</code>
       * @param value The floatArray to add.
       * @return This builder for chaining.
       */
      public Builder addFloatArray(float value) {
        ensureFloatArrayIsMutable();
        floatArray_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_array = 3;</code>
       * @param values The floatArray to add.
       * @return This builder for chaining.
       */
      public Builder addAllFloatArray(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatArrayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floatArray_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_array = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloatArray() {
        floatArray_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList doubleArray_ = emptyDoubleList();
      private void ensureDoubleArrayIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          doubleArray_ = mutableCopy(doubleArray_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated double double_array = 4;</code>
       * @return A list containing the doubleArray.
       */
      public java.util.List<java.lang.Double>
          getDoubleArrayList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(doubleArray_) : doubleArray_;
      }
      /**
       * <code>repeated double double_array = 4;</code>
       * @return The count of doubleArray.
       */
      public int getDoubleArrayCount() {
        return doubleArray_.size();
      }
      /**
       * <code>repeated double double_array = 4;</code>
       * @param index The index of the element to return.
       * @return The doubleArray at the given index.
       */
      public double getDoubleArray(int index) {
        return doubleArray_.getDouble(index);
      }
      /**
       * <code>repeated double double_array = 4;</code>
       * @param index The index to set the value at.
       * @param value The doubleArray to set.
       * @return This builder for chaining.
       */
      public Builder setDoubleArray(
          int index, double value) {
        ensureDoubleArrayIsMutable();
        doubleArray_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_array = 4;</code>
       * @param value The doubleArray to add.
       * @return This builder for chaining.
       */
      public Builder addDoubleArray(double value) {
        ensureDoubleArrayIsMutable();
        doubleArray_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_array = 4;</code>
       * @param values The doubleArray to add.
       * @return This builder for chaining.
       */
      public Builder addAllDoubleArray(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleArrayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, doubleArray_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_array = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoubleArray() {
        doubleArray_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList intArray_ = emptyIntList();
      private void ensureIntArrayIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          intArray_ = mutableCopy(intArray_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated sint32 int_array = 5;</code>
       * @return A list containing the intArray.
       */
      public java.util.List<java.lang.Integer>
          getIntArrayList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(intArray_) : intArray_;
      }
      /**
       * <code>repeated sint32 int_array = 5;</code>
       * @return The count of intArray.
       */
      public int getIntArrayCount() {
        return intArray_.size();
      }
      /**
       * <code>repeated sint32 int_array = 5;</code>
       * @param index The index of the element to return.
       * @return The intArray at the given index.
       */
      public int getIntArray(int index) {
        return intArray_.getInt(index);
      }
      /**
       * <code>repeated sint32 int_array = 5;</code>
       * @param index The index to set the value at.
       * @param value The intArray to set.
       * @return This builder for chaining.
       */
      public Builder setIntArray(
          int index, int value) {
        ensureIntArrayIsMutable();
        intArray_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 int_array = 5;</code>
       * @param value The intArray to add.
       * @return This builder for chaining.
       */
      public Builder addIntArray(int value) {
        ensureIntArrayIsMutable();
        intArray_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 int_array = 5;</code>
       * @param values The intArray to add.
       * @return This builder for chaining.
       */
      public Builder addAllIntArray(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntArrayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, intArray_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 int_array = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntArray() {
        intArray_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList longArray_ = emptyLongList();
      private void ensureLongArrayIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          longArray_ = mutableCopy(longArray_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated sint64 long_array = 6;</code>
       * @return A list containing the longArray.
       */
      public java.util.List<java.lang.Long>
          getLongArrayList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(longArray_) : longArray_;
      }
      /**
       * <code>repeated sint64 long_array = 6;</code>
       * @return The count of longArray.
       */
      public int getLongArrayCount() {
        return longArray_.size();
      }
      /**
       * <code>repeated sint64 long_array = 6;</code>
       * @param index The index of the element to return.
       * @return The longArray at the given index.
       */
      public long getLongArray(int index) {
        return longArray_.getLong(index);
      }
      /**
       * <code>repeated sint64 long_array = 6;</code>
       * @param index The index to set the value at.
       * @param value The longArray to set.
       * @return This builder for chaining.
       */
      public Builder setLongArray(
          int index, long value) {
        ensureLongArrayIsMutable();
        longArray_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 long_array = 6;</code>
       * @param value The longArray to add.
       * @return This builder for chaining.
       */
      public Builder addLongArray(long value) {
        ensureLongArrayIsMutable();
        longArray_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 long_array = 6;</code>
       * @param values The longArray to add.
       * @return This builder for chaining.
       */
      public Builder addAllLongArray(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureLongArrayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, longArray_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 long_array = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongArray() {
        longArray_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList unsignedIntArray_ = emptyIntList();
      private void ensureUnsignedIntArrayIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          unsignedIntArray_ = mutableCopy(unsignedIntArray_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint32 unsigned_int_array = 7;</code>
       * @return A list containing the unsignedIntArray.
       */
      public java.util.List<java.lang.Integer>
          getUnsignedIntArrayList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(unsignedIntArray_) : unsignedIntArray_;
      }
      /**
       * <code>repeated uint32 unsigned_int_array = 7;</code>
       * @return The count of unsignedIntArray.
       */
      public int getUnsignedIntArrayCount() {
        return unsignedIntArray_.size();
      }
      /**
       * <code>repeated uint32 unsigned_int_array = 7;</code>
       * @param index The index of the element to return.
       * @return The unsignedIntArray at the given index.
       */
      public int getUnsignedIntArray(int index) {
        return unsignedIntArray_.getInt(index);
      }
      /**
       * <code>repeated uint32 unsigned_int_array = 7;</code>
       * @param index The index to set the value at.
       * @param value The unsignedIntArray to set.
       * @return This builder for chaining.
       */
      public Builder setUnsignedIntArray(
          int index, int value) {
        ensureUnsignedIntArrayIsMutable();
        unsignedIntArray_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unsigned_int_array = 7;</code>
       * @param value The unsignedIntArray to add.
       * @return This builder for chaining.
       */
      public Builder addUnsignedIntArray(int value) {
        ensureUnsignedIntArrayIsMutable();
        unsignedIntArray_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unsigned_int_array = 7;</code>
       * @param values The unsignedIntArray to add.
       * @return This builder for chaining.
       */
      public Builder addAllUnsignedIntArray(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUnsignedIntArrayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unsignedIntArray_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unsigned_int_array = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnsignedIntArray() {
        unsignedIntArray_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList unsignedLongArray_ = emptyLongList();
      private void ensureUnsignedLongArrayIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          unsignedLongArray_ = mutableCopy(unsignedLongArray_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint64 unsigned_long_array = 8;</code>
       * @return A list containing the unsignedLongArray.
       */
      public java.util.List<java.lang.Long>
          getUnsignedLongArrayList() {
        return ((bitField0_ & 0x00000040) != 0) ?
                 java.util.Collections.unmodifiableList(unsignedLongArray_) : unsignedLongArray_;
      }
      /**
       * <code>repeated uint64 unsigned_long_array = 8;</code>
       * @return The count of unsignedLongArray.
       */
      public int getUnsignedLongArrayCount() {
        return unsignedLongArray_.size();
      }
      /**
       * <code>repeated uint64 unsigned_long_array = 8;</code>
       * @param index The index of the element to return.
       * @return The unsignedLongArray at the given index.
       */
      public long getUnsignedLongArray(int index) {
        return unsignedLongArray_.getLong(index);
      }
      /**
       * <code>repeated uint64 unsigned_long_array = 8;</code>
       * @param index The index to set the value at.
       * @param value The unsignedLongArray to set.
       * @return This builder for chaining.
       */
      public Builder setUnsignedLongArray(
          int index, long value) {
        ensureUnsignedLongArrayIsMutable();
        unsignedLongArray_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 unsigned_long_array = 8;</code>
       * @param value The unsignedLongArray to add.
       * @return This builder for chaining.
       */
      public Builder addUnsignedLongArray(long value) {
        ensureUnsignedLongArrayIsMutable();
        unsignedLongArray_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 unsigned_long_array = 8;</code>
       * @param values The unsignedLongArray to add.
       * @return This builder for chaining.
       */
      public Builder addAllUnsignedLongArray(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUnsignedLongArrayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unsignedLongArray_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 unsigned_long_array = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnsignedLongArray() {
        unsignedLongArray_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.BooleanList boolArray_ = emptyBooleanList();
      private void ensureBoolArrayIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          boolArray_ = mutableCopy(boolArray_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated bool bool_array = 9;</code>
       * @return A list containing the boolArray.
       */
      public java.util.List<java.lang.Boolean>
          getBoolArrayList() {
        return ((bitField0_ & 0x00000080) != 0) ?
                 java.util.Collections.unmodifiableList(boolArray_) : boolArray_;
      }
      /**
       * <code>repeated bool bool_array = 9;</code>
       * @return The count of boolArray.
       */
      public int getBoolArrayCount() {
        return boolArray_.size();
      }
      /**
       * <code>repeated bool bool_array = 9;</code>
       * @param index The index of the element to return.
       * @return The boolArray at the given index.
       */
      public boolean getBoolArray(int index) {
        return boolArray_.getBoolean(index);
      }
      /**
       * <code>repeated bool bool_array = 9;</code>
       * @param index The index to set the value at.
       * @param value The boolArray to set.
       * @return This builder for chaining.
       */
      public Builder setBoolArray(
          int index, boolean value) {
        ensureBoolArrayIsMutable();
        boolArray_.setBoolean(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_array = 9;</code>
       * @param value The boolArray to add.
       * @return This builder for chaining.
       */
      public Builder addBoolArray(boolean value) {
        ensureBoolArrayIsMutable();
        boolArray_.addBoolean(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_array = 9;</code>
       * @param values The boolArray to add.
       * @return This builder for chaining.
       */
      public Builder addAllBoolArray(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureBoolArrayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, boolArray_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_array = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolArray() {
        boolArray_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Tensor)
    }

    // @@protoc_insertion_point(class_scope:Tensor)
    private static final SpaceOuterClass.Tensor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SpaceOuterClass.Tensor();
    }

    public static SpaceOuterClass.Tensor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Tensor>
        PARSER = new com.google.protobuf.AbstractParser<Tensor>() {
      @java.lang.Override
      public Tensor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Tensor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Tensor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Tensor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SpaceOuterClass.Tensor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphSpaceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GraphSpace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Space node_space = 1;</code>
     * @return Whether the nodeSpace field is set.
     */
    boolean hasNodeSpace();
    /**
     * <code>.Space node_space = 1;</code>
     * @return The nodeSpace.
     */
    SpaceOuterClass.Space getNodeSpace();
    /**
     * <code>.Space node_space = 1;</code>
     */
    SpaceOuterClass.SpaceOrBuilder getNodeSpaceOrBuilder();

    /**
     * <code>.Space edge_space = 2;</code>
     * @return Whether the edgeSpace field is set.
     */
    boolean hasEdgeSpace();
    /**
     * <code>.Space edge_space = 2;</code>
     * @return The edgeSpace.
     */
    SpaceOuterClass.Space getEdgeSpace();
    /**
     * <code>.Space edge_space = 2;</code>
     */
    SpaceOuterClass.SpaceOrBuilder getEdgeSpaceOrBuilder();
  }
  /**
   * Protobuf type {@code GraphSpace}
   */
  public static final class GraphSpace extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GraphSpace)
      GraphSpaceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GraphSpace.newBuilder() to construct.
    private GraphSpace(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GraphSpace() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GraphSpace();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GraphSpace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              SpaceOuterClass.Space.Builder subBuilder = null;
              if (nodeSpace_ != null) {
                subBuilder = nodeSpace_.toBuilder();
              }
              nodeSpace_ = input.readMessage(SpaceOuterClass.Space.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeSpace_);
                nodeSpace_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              SpaceOuterClass.Space.Builder subBuilder = null;
              if (edgeSpace_ != null) {
                subBuilder = edgeSpace_.toBuilder();
              }
              edgeSpace_ = input.readMessage(SpaceOuterClass.Space.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(edgeSpace_);
                edgeSpace_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SpaceOuterClass.internal_static_GraphSpace_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SpaceOuterClass.internal_static_GraphSpace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SpaceOuterClass.GraphSpace.class, SpaceOuterClass.GraphSpace.Builder.class);
    }

    public static final int NODE_SPACE_FIELD_NUMBER = 1;
    private SpaceOuterClass.Space nodeSpace_;
    /**
     * <code>.Space node_space = 1;</code>
     * @return Whether the nodeSpace field is set.
     */
    @java.lang.Override
    public boolean hasNodeSpace() {
      return nodeSpace_ != null;
    }
    /**
     * <code>.Space node_space = 1;</code>
     * @return The nodeSpace.
     */
    @java.lang.Override
    public SpaceOuterClass.Space getNodeSpace() {
      return nodeSpace_ == null ? SpaceOuterClass.Space.getDefaultInstance() : nodeSpace_;
    }
    /**
     * <code>.Space node_space = 1;</code>
     */
    @java.lang.Override
    public SpaceOuterClass.SpaceOrBuilder getNodeSpaceOrBuilder() {
      return getNodeSpace();
    }

    public static final int EDGE_SPACE_FIELD_NUMBER = 2;
    private SpaceOuterClass.Space edgeSpace_;
    /**
     * <code>.Space edge_space = 2;</code>
     * @return Whether the edgeSpace field is set.
     */
    @java.lang.Override
    public boolean hasEdgeSpace() {
      return edgeSpace_ != null;
    }
    /**
     * <code>.Space edge_space = 2;</code>
     * @return The edgeSpace.
     */
    @java.lang.Override
    public SpaceOuterClass.Space getEdgeSpace() {
      return edgeSpace_ == null ? SpaceOuterClass.Space.getDefaultInstance() : edgeSpace_;
    }
    /**
     * <code>.Space edge_space = 2;</code>
     */
    @java.lang.Override
    public SpaceOuterClass.SpaceOrBuilder getEdgeSpaceOrBuilder() {
      return getEdgeSpace();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeSpace_ != null) {
        output.writeMessage(1, getNodeSpace());
      }
      if (edgeSpace_ != null) {
        output.writeMessage(2, getEdgeSpace());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeSpace_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNodeSpace());
      }
      if (edgeSpace_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEdgeSpace());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SpaceOuterClass.GraphSpace)) {
        return super.equals(obj);
      }
      SpaceOuterClass.GraphSpace other = (SpaceOuterClass.GraphSpace) obj;

      if (hasNodeSpace() != other.hasNodeSpace()) return false;
      if (hasNodeSpace()) {
        if (!getNodeSpace()
            .equals(other.getNodeSpace())) return false;
      }
      if (hasEdgeSpace() != other.hasEdgeSpace()) return false;
      if (hasEdgeSpace()) {
        if (!getEdgeSpace()
            .equals(other.getEdgeSpace())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNodeSpace()) {
        hash = (37 * hash) + NODE_SPACE_FIELD_NUMBER;
        hash = (53 * hash) + getNodeSpace().hashCode();
      }
      if (hasEdgeSpace()) {
        hash = (37 * hash) + EDGE_SPACE_FIELD_NUMBER;
        hash = (53 * hash) + getEdgeSpace().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SpaceOuterClass.GraphSpace parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.GraphSpace parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.GraphSpace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.GraphSpace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.GraphSpace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.GraphSpace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.GraphSpace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.GraphSpace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.GraphSpace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.GraphSpace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.GraphSpace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.GraphSpace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SpaceOuterClass.GraphSpace prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GraphSpace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GraphSpace)
        SpaceOuterClass.GraphSpaceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SpaceOuterClass.internal_static_GraphSpace_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SpaceOuterClass.internal_static_GraphSpace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SpaceOuterClass.GraphSpace.class, SpaceOuterClass.GraphSpace.Builder.class);
      }

      // Construct using SpaceOuterClass.GraphSpace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (nodeSpaceBuilder_ == null) {
          nodeSpace_ = null;
        } else {
          nodeSpace_ = null;
          nodeSpaceBuilder_ = null;
        }
        if (edgeSpaceBuilder_ == null) {
          edgeSpace_ = null;
        } else {
          edgeSpace_ = null;
          edgeSpaceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SpaceOuterClass.internal_static_GraphSpace_descriptor;
      }

      @java.lang.Override
      public SpaceOuterClass.GraphSpace getDefaultInstanceForType() {
        return SpaceOuterClass.GraphSpace.getDefaultInstance();
      }

      @java.lang.Override
      public SpaceOuterClass.GraphSpace build() {
        SpaceOuterClass.GraphSpace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SpaceOuterClass.GraphSpace buildPartial() {
        SpaceOuterClass.GraphSpace result = new SpaceOuterClass.GraphSpace(this);
        if (nodeSpaceBuilder_ == null) {
          result.nodeSpace_ = nodeSpace_;
        } else {
          result.nodeSpace_ = nodeSpaceBuilder_.build();
        }
        if (edgeSpaceBuilder_ == null) {
          result.edgeSpace_ = edgeSpace_;
        } else {
          result.edgeSpace_ = edgeSpaceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SpaceOuterClass.GraphSpace) {
          return mergeFrom((SpaceOuterClass.GraphSpace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SpaceOuterClass.GraphSpace other) {
        if (other == SpaceOuterClass.GraphSpace.getDefaultInstance()) return this;
        if (other.hasNodeSpace()) {
          mergeNodeSpace(other.getNodeSpace());
        }
        if (other.hasEdgeSpace()) {
          mergeEdgeSpace(other.getEdgeSpace());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SpaceOuterClass.GraphSpace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SpaceOuterClass.GraphSpace) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private SpaceOuterClass.Space nodeSpace_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Space, SpaceOuterClass.Space.Builder, SpaceOuterClass.SpaceOrBuilder> nodeSpaceBuilder_;
      /**
       * <code>.Space node_space = 1;</code>
       * @return Whether the nodeSpace field is set.
       */
      public boolean hasNodeSpace() {
        return nodeSpaceBuilder_ != null || nodeSpace_ != null;
      }
      /**
       * <code>.Space node_space = 1;</code>
       * @return The nodeSpace.
       */
      public SpaceOuterClass.Space getNodeSpace() {
        if (nodeSpaceBuilder_ == null) {
          return nodeSpace_ == null ? SpaceOuterClass.Space.getDefaultInstance() : nodeSpace_;
        } else {
          return nodeSpaceBuilder_.getMessage();
        }
      }
      /**
       * <code>.Space node_space = 1;</code>
       */
      public Builder setNodeSpace(SpaceOuterClass.Space value) {
        if (nodeSpaceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeSpace_ = value;
          onChanged();
        } else {
          nodeSpaceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Space node_space = 1;</code>
       */
      public Builder setNodeSpace(
          SpaceOuterClass.Space.Builder builderForValue) {
        if (nodeSpaceBuilder_ == null) {
          nodeSpace_ = builderForValue.build();
          onChanged();
        } else {
          nodeSpaceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Space node_space = 1;</code>
       */
      public Builder mergeNodeSpace(SpaceOuterClass.Space value) {
        if (nodeSpaceBuilder_ == null) {
          if (nodeSpace_ != null) {
            nodeSpace_ =
              SpaceOuterClass.Space.newBuilder(nodeSpace_).mergeFrom(value).buildPartial();
          } else {
            nodeSpace_ = value;
          }
          onChanged();
        } else {
          nodeSpaceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Space node_space = 1;</code>
       */
      public Builder clearNodeSpace() {
        if (nodeSpaceBuilder_ == null) {
          nodeSpace_ = null;
          onChanged();
        } else {
          nodeSpace_ = null;
          nodeSpaceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Space node_space = 1;</code>
       */
      public SpaceOuterClass.Space.Builder getNodeSpaceBuilder() {
        
        onChanged();
        return getNodeSpaceFieldBuilder().getBuilder();
      }
      /**
       * <code>.Space node_space = 1;</code>
       */
      public SpaceOuterClass.SpaceOrBuilder getNodeSpaceOrBuilder() {
        if (nodeSpaceBuilder_ != null) {
          return nodeSpaceBuilder_.getMessageOrBuilder();
        } else {
          return nodeSpace_ == null ?
              SpaceOuterClass.Space.getDefaultInstance() : nodeSpace_;
        }
      }
      /**
       * <code>.Space node_space = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Space, SpaceOuterClass.Space.Builder, SpaceOuterClass.SpaceOrBuilder> 
          getNodeSpaceFieldBuilder() {
        if (nodeSpaceBuilder_ == null) {
          nodeSpaceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SpaceOuterClass.Space, SpaceOuterClass.Space.Builder, SpaceOuterClass.SpaceOrBuilder>(
                  getNodeSpace(),
                  getParentForChildren(),
                  isClean());
          nodeSpace_ = null;
        }
        return nodeSpaceBuilder_;
      }

      private SpaceOuterClass.Space edgeSpace_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Space, SpaceOuterClass.Space.Builder, SpaceOuterClass.SpaceOrBuilder> edgeSpaceBuilder_;
      /**
       * <code>.Space edge_space = 2;</code>
       * @return Whether the edgeSpace field is set.
       */
      public boolean hasEdgeSpace() {
        return edgeSpaceBuilder_ != null || edgeSpace_ != null;
      }
      /**
       * <code>.Space edge_space = 2;</code>
       * @return The edgeSpace.
       */
      public SpaceOuterClass.Space getEdgeSpace() {
        if (edgeSpaceBuilder_ == null) {
          return edgeSpace_ == null ? SpaceOuterClass.Space.getDefaultInstance() : edgeSpace_;
        } else {
          return edgeSpaceBuilder_.getMessage();
        }
      }
      /**
       * <code>.Space edge_space = 2;</code>
       */
      public Builder setEdgeSpace(SpaceOuterClass.Space value) {
        if (edgeSpaceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          edgeSpace_ = value;
          onChanged();
        } else {
          edgeSpaceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Space edge_space = 2;</code>
       */
      public Builder setEdgeSpace(
          SpaceOuterClass.Space.Builder builderForValue) {
        if (edgeSpaceBuilder_ == null) {
          edgeSpace_ = builderForValue.build();
          onChanged();
        } else {
          edgeSpaceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Space edge_space = 2;</code>
       */
      public Builder mergeEdgeSpace(SpaceOuterClass.Space value) {
        if (edgeSpaceBuilder_ == null) {
          if (edgeSpace_ != null) {
            edgeSpace_ =
              SpaceOuterClass.Space.newBuilder(edgeSpace_).mergeFrom(value).buildPartial();
          } else {
            edgeSpace_ = value;
          }
          onChanged();
        } else {
          edgeSpaceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Space edge_space = 2;</code>
       */
      public Builder clearEdgeSpace() {
        if (edgeSpaceBuilder_ == null) {
          edgeSpace_ = null;
          onChanged();
        } else {
          edgeSpace_ = null;
          edgeSpaceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Space edge_space = 2;</code>
       */
      public SpaceOuterClass.Space.Builder getEdgeSpaceBuilder() {
        
        onChanged();
        return getEdgeSpaceFieldBuilder().getBuilder();
      }
      /**
       * <code>.Space edge_space = 2;</code>
       */
      public SpaceOuterClass.SpaceOrBuilder getEdgeSpaceOrBuilder() {
        if (edgeSpaceBuilder_ != null) {
          return edgeSpaceBuilder_.getMessageOrBuilder();
        } else {
          return edgeSpace_ == null ?
              SpaceOuterClass.Space.getDefaultInstance() : edgeSpace_;
        }
      }
      /**
       * <code>.Space edge_space = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Space, SpaceOuterClass.Space.Builder, SpaceOuterClass.SpaceOrBuilder> 
          getEdgeSpaceFieldBuilder() {
        if (edgeSpaceBuilder_ == null) {
          edgeSpaceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SpaceOuterClass.Space, SpaceOuterClass.Space.Builder, SpaceOuterClass.SpaceOrBuilder>(
                  getEdgeSpace(),
                  getParentForChildren(),
                  isClean());
          edgeSpace_ = null;
        }
        return edgeSpaceBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GraphSpace)
    }

    // @@protoc_insertion_point(class_scope:GraphSpace)
    private static final SpaceOuterClass.GraphSpace DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SpaceOuterClass.GraphSpace();
    }

    public static SpaceOuterClass.GraphSpace getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphSpace>
        PARSER = new com.google.protobuf.AbstractParser<GraphSpace>() {
      @java.lang.Override
      public GraphSpace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GraphSpace(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GraphSpace> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphSpace> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SpaceOuterClass.GraphSpace getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Graph)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor nodes = 1;</code>
     * @return Whether the nodes field is set.
     */
    boolean hasNodes();
    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor nodes = 1;</code>
     * @return The nodes.
     */
    SpaceOuterClass.Tensor getNodes();
    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor nodes = 1;</code>
     */
    SpaceOuterClass.TensorOrBuilder getNodesOrBuilder();

    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor edges = 2;</code>
     * @return Whether the edges field is set.
     */
    boolean hasEdges();
    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor edges = 2;</code>
     * @return The edges.
     */
    SpaceOuterClass.Tensor getEdges();
    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor edges = 2;</code>
     */
    SpaceOuterClass.TensorOrBuilder getEdgesOrBuilder();

    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor edge_links = 3;</code>
     * @return Whether the edgeLinks field is set.
     */
    boolean hasEdgeLinks();
    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor edge_links = 3;</code>
     * @return The edgeLinks.
     */
    SpaceOuterClass.Tensor getEdgeLinks();
    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor edge_links = 3;</code>
     */
    SpaceOuterClass.TensorOrBuilder getEdgeLinksOrBuilder();
  }
  /**
   * Protobuf type {@code Graph}
   */
  public static final class Graph extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Graph)
      GraphOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Graph.newBuilder() to construct.
    private Graph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Graph() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Graph();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Graph(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              SpaceOuterClass.Tensor.Builder subBuilder = null;
              if (nodes_ != null) {
                subBuilder = nodes_.toBuilder();
              }
              nodes_ = input.readMessage(SpaceOuterClass.Tensor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodes_);
                nodes_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              SpaceOuterClass.Tensor.Builder subBuilder = null;
              if (edges_ != null) {
                subBuilder = edges_.toBuilder();
              }
              edges_ = input.readMessage(SpaceOuterClass.Tensor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(edges_);
                edges_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              SpaceOuterClass.Tensor.Builder subBuilder = null;
              if (edgeLinks_ != null) {
                subBuilder = edgeLinks_.toBuilder();
              }
              edgeLinks_ = input.readMessage(SpaceOuterClass.Tensor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(edgeLinks_);
                edgeLinks_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SpaceOuterClass.internal_static_Graph_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SpaceOuterClass.internal_static_Graph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SpaceOuterClass.Graph.class, SpaceOuterClass.Graph.Builder.class);
    }

    public static final int NODES_FIELD_NUMBER = 1;
    private SpaceOuterClass.Tensor nodes_;
    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor nodes = 1;</code>
     * @return Whether the nodes field is set.
     */
    @java.lang.Override
    public boolean hasNodes() {
      return nodes_ != null;
    }
    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor nodes = 1;</code>
     * @return The nodes.
     */
    @java.lang.Override
    public SpaceOuterClass.Tensor getNodes() {
      return nodes_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : nodes_;
    }
    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor nodes = 1;</code>
     */
    @java.lang.Override
    public SpaceOuterClass.TensorOrBuilder getNodesOrBuilder() {
      return getNodes();
    }

    public static final int EDGES_FIELD_NUMBER = 2;
    private SpaceOuterClass.Tensor edges_;
    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor edges = 2;</code>
     * @return Whether the edges field is set.
     */
    @java.lang.Override
    public boolean hasEdges() {
      return edges_ != null;
    }
    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor edges = 2;</code>
     * @return The edges.
     */
    @java.lang.Override
    public SpaceOuterClass.Tensor getEdges() {
      return edges_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : edges_;
    }
    /**
     * <pre>
     * floating type
     * </pre>
     *
     * <code>.Tensor edges = 2;</code>
     */
    @java.lang.Override
    public SpaceOuterClass.TensorOrBuilder getEdgesOrBuilder() {
      return getEdges();
    }

    public static final int EDGE_LINKS_FIELD_NUMBER = 3;
    private SpaceOuterClass.Tensor edgeLinks_;
    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor edge_links = 3;</code>
     * @return Whether the edgeLinks field is set.
     */
    @java.lang.Override
    public boolean hasEdgeLinks() {
      return edgeLinks_ != null;
    }
    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor edge_links = 3;</code>
     * @return The edgeLinks.
     */
    @java.lang.Override
    public SpaceOuterClass.Tensor getEdgeLinks() {
      return edgeLinks_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : edgeLinks_;
    }
    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor edge_links = 3;</code>
     */
    @java.lang.Override
    public SpaceOuterClass.TensorOrBuilder getEdgeLinksOrBuilder() {
      return getEdgeLinks();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodes_ != null) {
        output.writeMessage(1, getNodes());
      }
      if (edges_ != null) {
        output.writeMessage(2, getEdges());
      }
      if (edgeLinks_ != null) {
        output.writeMessage(3, getEdgeLinks());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodes_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNodes());
      }
      if (edges_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEdges());
      }
      if (edgeLinks_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEdgeLinks());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SpaceOuterClass.Graph)) {
        return super.equals(obj);
      }
      SpaceOuterClass.Graph other = (SpaceOuterClass.Graph) obj;

      if (hasNodes() != other.hasNodes()) return false;
      if (hasNodes()) {
        if (!getNodes()
            .equals(other.getNodes())) return false;
      }
      if (hasEdges() != other.hasEdges()) return false;
      if (hasEdges()) {
        if (!getEdges()
            .equals(other.getEdges())) return false;
      }
      if (hasEdgeLinks() != other.hasEdgeLinks()) return false;
      if (hasEdgeLinks()) {
        if (!getEdgeLinks()
            .equals(other.getEdgeLinks())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNodes()) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodes().hashCode();
      }
      if (hasEdges()) {
        hash = (37 * hash) + EDGES_FIELD_NUMBER;
        hash = (53 * hash) + getEdges().hashCode();
      }
      if (hasEdgeLinks()) {
        hash = (37 * hash) + EDGE_LINKS_FIELD_NUMBER;
        hash = (53 * hash) + getEdgeLinks().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SpaceOuterClass.Graph parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Graph parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Graph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Graph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Graph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Graph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Graph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Graph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.Graph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Graph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.Graph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Graph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SpaceOuterClass.Graph prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Graph}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Graph)
        SpaceOuterClass.GraphOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SpaceOuterClass.internal_static_Graph_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SpaceOuterClass.internal_static_Graph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SpaceOuterClass.Graph.class, SpaceOuterClass.Graph.Builder.class);
      }

      // Construct using SpaceOuterClass.Graph.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (nodesBuilder_ == null) {
          nodes_ = null;
        } else {
          nodes_ = null;
          nodesBuilder_ = null;
        }
        if (edgesBuilder_ == null) {
          edges_ = null;
        } else {
          edges_ = null;
          edgesBuilder_ = null;
        }
        if (edgeLinksBuilder_ == null) {
          edgeLinks_ = null;
        } else {
          edgeLinks_ = null;
          edgeLinksBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SpaceOuterClass.internal_static_Graph_descriptor;
      }

      @java.lang.Override
      public SpaceOuterClass.Graph getDefaultInstanceForType() {
        return SpaceOuterClass.Graph.getDefaultInstance();
      }

      @java.lang.Override
      public SpaceOuterClass.Graph build() {
        SpaceOuterClass.Graph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SpaceOuterClass.Graph buildPartial() {
        SpaceOuterClass.Graph result = new SpaceOuterClass.Graph(this);
        if (nodesBuilder_ == null) {
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        if (edgesBuilder_ == null) {
          result.edges_ = edges_;
        } else {
          result.edges_ = edgesBuilder_.build();
        }
        if (edgeLinksBuilder_ == null) {
          result.edgeLinks_ = edgeLinks_;
        } else {
          result.edgeLinks_ = edgeLinksBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SpaceOuterClass.Graph) {
          return mergeFrom((SpaceOuterClass.Graph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SpaceOuterClass.Graph other) {
        if (other == SpaceOuterClass.Graph.getDefaultInstance()) return this;
        if (other.hasNodes()) {
          mergeNodes(other.getNodes());
        }
        if (other.hasEdges()) {
          mergeEdges(other.getEdges());
        }
        if (other.hasEdgeLinks()) {
          mergeEdgeLinks(other.getEdgeLinks());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SpaceOuterClass.Graph parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SpaceOuterClass.Graph) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private SpaceOuterClass.Tensor nodes_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> nodesBuilder_;
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor nodes = 1;</code>
       * @return Whether the nodes field is set.
       */
      public boolean hasNodes() {
        return nodesBuilder_ != null || nodes_ != null;
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor nodes = 1;</code>
       * @return The nodes.
       */
      public SpaceOuterClass.Tensor getNodes() {
        if (nodesBuilder_ == null) {
          return nodes_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : nodes_;
        } else {
          return nodesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor nodes = 1;</code>
       */
      public Builder setNodes(SpaceOuterClass.Tensor value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodes_ = value;
          onChanged();
        } else {
          nodesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor nodes = 1;</code>
       */
      public Builder setNodes(
          SpaceOuterClass.Tensor.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          nodes_ = builderForValue.build();
          onChanged();
        } else {
          nodesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor nodes = 1;</code>
       */
      public Builder mergeNodes(SpaceOuterClass.Tensor value) {
        if (nodesBuilder_ == null) {
          if (nodes_ != null) {
            nodes_ =
              SpaceOuterClass.Tensor.newBuilder(nodes_).mergeFrom(value).buildPartial();
          } else {
            nodes_ = value;
          }
          onChanged();
        } else {
          nodesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor nodes = 1;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = null;
          onChanged();
        } else {
          nodes_ = null;
          nodesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor nodes = 1;</code>
       */
      public SpaceOuterClass.Tensor.Builder getNodesBuilder() {
        
        onChanged();
        return getNodesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor nodes = 1;</code>
       */
      public SpaceOuterClass.TensorOrBuilder getNodesOrBuilder() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilder();
        } else {
          return nodes_ == null ?
              SpaceOuterClass.Tensor.getDefaultInstance() : nodes_;
        }
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor nodes = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder>(
                  getNodes(),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      private SpaceOuterClass.Tensor edges_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> edgesBuilder_;
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor edges = 2;</code>
       * @return Whether the edges field is set.
       */
      public boolean hasEdges() {
        return edgesBuilder_ != null || edges_ != null;
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor edges = 2;</code>
       * @return The edges.
       */
      public SpaceOuterClass.Tensor getEdges() {
        if (edgesBuilder_ == null) {
          return edges_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : edges_;
        } else {
          return edgesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor edges = 2;</code>
       */
      public Builder setEdges(SpaceOuterClass.Tensor value) {
        if (edgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          edges_ = value;
          onChanged();
        } else {
          edgesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor edges = 2;</code>
       */
      public Builder setEdges(
          SpaceOuterClass.Tensor.Builder builderForValue) {
        if (edgesBuilder_ == null) {
          edges_ = builderForValue.build();
          onChanged();
        } else {
          edgesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor edges = 2;</code>
       */
      public Builder mergeEdges(SpaceOuterClass.Tensor value) {
        if (edgesBuilder_ == null) {
          if (edges_ != null) {
            edges_ =
              SpaceOuterClass.Tensor.newBuilder(edges_).mergeFrom(value).buildPartial();
          } else {
            edges_ = value;
          }
          onChanged();
        } else {
          edgesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor edges = 2;</code>
       */
      public Builder clearEdges() {
        if (edgesBuilder_ == null) {
          edges_ = null;
          onChanged();
        } else {
          edges_ = null;
          edgesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor edges = 2;</code>
       */
      public SpaceOuterClass.Tensor.Builder getEdgesBuilder() {
        
        onChanged();
        return getEdgesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor edges = 2;</code>
       */
      public SpaceOuterClass.TensorOrBuilder getEdgesOrBuilder() {
        if (edgesBuilder_ != null) {
          return edgesBuilder_.getMessageOrBuilder();
        } else {
          return edges_ == null ?
              SpaceOuterClass.Tensor.getDefaultInstance() : edges_;
        }
      }
      /**
       * <pre>
       * floating type
       * </pre>
       *
       * <code>.Tensor edges = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> 
          getEdgesFieldBuilder() {
        if (edgesBuilder_ == null) {
          edgesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder>(
                  getEdges(),
                  getParentForChildren(),
                  isClean());
          edges_ = null;
        }
        return edgesBuilder_;
      }

      private SpaceOuterClass.Tensor edgeLinks_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> edgeLinksBuilder_;
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor edge_links = 3;</code>
       * @return Whether the edgeLinks field is set.
       */
      public boolean hasEdgeLinks() {
        return edgeLinksBuilder_ != null || edgeLinks_ != null;
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor edge_links = 3;</code>
       * @return The edgeLinks.
       */
      public SpaceOuterClass.Tensor getEdgeLinks() {
        if (edgeLinksBuilder_ == null) {
          return edgeLinks_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : edgeLinks_;
        } else {
          return edgeLinksBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor edge_links = 3;</code>
       */
      public Builder setEdgeLinks(SpaceOuterClass.Tensor value) {
        if (edgeLinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          edgeLinks_ = value;
          onChanged();
        } else {
          edgeLinksBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor edge_links = 3;</code>
       */
      public Builder setEdgeLinks(
          SpaceOuterClass.Tensor.Builder builderForValue) {
        if (edgeLinksBuilder_ == null) {
          edgeLinks_ = builderForValue.build();
          onChanged();
        } else {
          edgeLinksBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor edge_links = 3;</code>
       */
      public Builder mergeEdgeLinks(SpaceOuterClass.Tensor value) {
        if (edgeLinksBuilder_ == null) {
          if (edgeLinks_ != null) {
            edgeLinks_ =
              SpaceOuterClass.Tensor.newBuilder(edgeLinks_).mergeFrom(value).buildPartial();
          } else {
            edgeLinks_ = value;
          }
          onChanged();
        } else {
          edgeLinksBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor edge_links = 3;</code>
       */
      public Builder clearEdgeLinks() {
        if (edgeLinksBuilder_ == null) {
          edgeLinks_ = null;
          onChanged();
        } else {
          edgeLinks_ = null;
          edgeLinksBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor edge_links = 3;</code>
       */
      public SpaceOuterClass.Tensor.Builder getEdgeLinksBuilder() {
        
        onChanged();
        return getEdgeLinksFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor edge_links = 3;</code>
       */
      public SpaceOuterClass.TensorOrBuilder getEdgeLinksOrBuilder() {
        if (edgeLinksBuilder_ != null) {
          return edgeLinksBuilder_.getMessageOrBuilder();
        } else {
          return edgeLinks_ == null ?
              SpaceOuterClass.Tensor.getDefaultInstance() : edgeLinks_;
        }
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor edge_links = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> 
          getEdgeLinksFieldBuilder() {
        if (edgeLinksBuilder_ == null) {
          edgeLinksBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder>(
                  getEdgeLinks(),
                  getParentForChildren(),
                  isClean());
          edgeLinks_ = null;
        }
        return edgeLinksBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Graph)
    }

    // @@protoc_insertion_point(class_scope:Graph)
    private static final SpaceOuterClass.Graph DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SpaceOuterClass.Graph();
    }

    public static SpaceOuterClass.Graph getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Graph>
        PARSER = new com.google.protobuf.AbstractParser<Graph>() {
      @java.lang.Override
      public Graph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Graph(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Graph> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Graph> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SpaceOuterClass.Graph getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Image)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.CompressionType compression_type = 1;</code>
     * @return The enum numeric value on the wire for compressionType.
     */
    int getCompressionTypeValue();
    /**
     * <code>.CompressionType compression_type = 1;</code>
     * @return The compressionType.
     */
    SpaceOuterClass.CompressionType getCompressionType();

    /**
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <pre>
     * (H, W, C) or (H, W)
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @return A list containing the shape.
     */
    java.util.List<java.lang.Integer> getShapeList();
    /**
     * <pre>
     * (H, W, C) or (H, W)
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @return The count of shape.
     */
    int getShapeCount();
    /**
     * <pre>
     * (H, W, C) or (H, W)
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @param index The index of the element to return.
     * @return The shape at the given index.
     */
    int getShape(int index);

    /**
     * <pre>
     * (H, W, C) to [0, 1, 2]
     * </pre>
     *
     * <code>repeated int32 dimension_mapping = 4;</code>
     * @return A list containing the dimensionMapping.
     */
    java.util.List<java.lang.Integer> getDimensionMappingList();
    /**
     * <pre>
     * (H, W, C) to [0, 1, 2]
     * </pre>
     *
     * <code>repeated int32 dimension_mapping = 4;</code>
     * @return The count of dimensionMapping.
     */
    int getDimensionMappingCount();
    /**
     * <pre>
     * (H, W, C) to [0, 1, 2]
     * </pre>
     *
     * <code>repeated int32 dimension_mapping = 4;</code>
     * @param index The index of the element to return.
     * @return The dimensionMapping at the given index.
     */
    int getDimensionMapping(int index);
  }
  /**
   * Protobuf type {@code Image}
   */
  public static final class Image extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Image)
      ImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Image.newBuilder() to construct.
    private Image(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Image() {
      compressionType_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
      shape_ = emptyIntList();
      dimensionMapping_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Image();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Image(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              compressionType_ = rawValue;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                shape_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              shape_.addInt(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                shape_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                shape_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                dimensionMapping_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              dimensionMapping_.addInt(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                dimensionMapping_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                dimensionMapping_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          shape_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          dimensionMapping_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SpaceOuterClass.internal_static_Image_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SpaceOuterClass.internal_static_Image_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SpaceOuterClass.Image.class, SpaceOuterClass.Image.Builder.class);
    }

    public static final int COMPRESSION_TYPE_FIELD_NUMBER = 1;
    private int compressionType_;
    /**
     * <code>.CompressionType compression_type = 1;</code>
     * @return The enum numeric value on the wire for compressionType.
     */
    @java.lang.Override public int getCompressionTypeValue() {
      return compressionType_;
    }
    /**
     * <code>.CompressionType compression_type = 1;</code>
     * @return The compressionType.
     */
    @java.lang.Override public SpaceOuterClass.CompressionType getCompressionType() {
      @SuppressWarnings("deprecation")
      SpaceOuterClass.CompressionType result = SpaceOuterClass.CompressionType.valueOf(compressionType_);
      return result == null ? SpaceOuterClass.CompressionType.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int SHAPE_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList shape_;
    /**
     * <pre>
     * (H, W, C) or (H, W)
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @return A list containing the shape.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getShapeList() {
      return shape_;
    }
    /**
     * <pre>
     * (H, W, C) or (H, W)
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @return The count of shape.
     */
    public int getShapeCount() {
      return shape_.size();
    }
    /**
     * <pre>
     * (H, W, C) or (H, W)
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @param index The index of the element to return.
     * @return The shape at the given index.
     */
    public int getShape(int index) {
      return shape_.getInt(index);
    }
    private int shapeMemoizedSerializedSize = -1;

    public static final int DIMENSION_MAPPING_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList dimensionMapping_;
    /**
     * <pre>
     * (H, W, C) to [0, 1, 2]
     * </pre>
     *
     * <code>repeated int32 dimension_mapping = 4;</code>
     * @return A list containing the dimensionMapping.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDimensionMappingList() {
      return dimensionMapping_;
    }
    /**
     * <pre>
     * (H, W, C) to [0, 1, 2]
     * </pre>
     *
     * <code>repeated int32 dimension_mapping = 4;</code>
     * @return The count of dimensionMapping.
     */
    public int getDimensionMappingCount() {
      return dimensionMapping_.size();
    }
    /**
     * <pre>
     * (H, W, C) to [0, 1, 2]
     * </pre>
     *
     * <code>repeated int32 dimension_mapping = 4;</code>
     * @param index The index of the element to return.
     * @return The dimensionMapping at the given index.
     */
    public int getDimensionMapping(int index) {
      return dimensionMapping_.getInt(index);
    }
    private int dimensionMappingMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (compressionType_ != SpaceOuterClass.CompressionType.COMPRESSION_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, compressionType_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      if (getShapeList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(shapeMemoizedSerializedSize);
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeInt32NoTag(shape_.getInt(i));
      }
      if (getDimensionMappingList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(dimensionMappingMemoizedSerializedSize);
      }
      for (int i = 0; i < dimensionMapping_.size(); i++) {
        output.writeInt32NoTag(dimensionMapping_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (compressionType_ != SpaceOuterClass.CompressionType.COMPRESSION_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, compressionType_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shape_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(shape_.getInt(i));
        }
        size += dataSize;
        if (!getShapeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        shapeMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dimensionMapping_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dimensionMapping_.getInt(i));
        }
        size += dataSize;
        if (!getDimensionMappingList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimensionMappingMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SpaceOuterClass.Image)) {
        return super.equals(obj);
      }
      SpaceOuterClass.Image other = (SpaceOuterClass.Image) obj;

      if (compressionType_ != other.compressionType_) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!getShapeList()
          .equals(other.getShapeList())) return false;
      if (!getDimensionMappingList()
          .equals(other.getDimensionMappingList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMPRESSION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + compressionType_;
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      if (getShapeCount() > 0) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShapeList().hashCode();
      }
      if (getDimensionMappingCount() > 0) {
        hash = (37 * hash) + DIMENSION_MAPPING_FIELD_NUMBER;
        hash = (53 * hash) + getDimensionMappingList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SpaceOuterClass.Image parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Image parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Image parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Image parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Image parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Image parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Image parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Image parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.Image parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Image parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.Image parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Image parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SpaceOuterClass.Image prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Image}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Image)
        SpaceOuterClass.ImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SpaceOuterClass.internal_static_Image_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SpaceOuterClass.internal_static_Image_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SpaceOuterClass.Image.class, SpaceOuterClass.Image.Builder.class);
      }

      // Construct using SpaceOuterClass.Image.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        compressionType_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        shape_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        dimensionMapping_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SpaceOuterClass.internal_static_Image_descriptor;
      }

      @java.lang.Override
      public SpaceOuterClass.Image getDefaultInstanceForType() {
        return SpaceOuterClass.Image.getDefaultInstance();
      }

      @java.lang.Override
      public SpaceOuterClass.Image build() {
        SpaceOuterClass.Image result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SpaceOuterClass.Image buildPartial() {
        SpaceOuterClass.Image result = new SpaceOuterClass.Image(this);
        int from_bitField0_ = bitField0_;
        result.compressionType_ = compressionType_;
        result.data_ = data_;
        if (((bitField0_ & 0x00000001) != 0)) {
          shape_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.shape_ = shape_;
        if (((bitField0_ & 0x00000002) != 0)) {
          dimensionMapping_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dimensionMapping_ = dimensionMapping_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SpaceOuterClass.Image) {
          return mergeFrom((SpaceOuterClass.Image)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SpaceOuterClass.Image other) {
        if (other == SpaceOuterClass.Image.getDefaultInstance()) return this;
        if (other.compressionType_ != 0) {
          setCompressionTypeValue(other.getCompressionTypeValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.shape_.isEmpty()) {
          if (shape_.isEmpty()) {
            shape_ = other.shape_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureShapeIsMutable();
            shape_.addAll(other.shape_);
          }
          onChanged();
        }
        if (!other.dimensionMapping_.isEmpty()) {
          if (dimensionMapping_.isEmpty()) {
            dimensionMapping_ = other.dimensionMapping_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDimensionMappingIsMutable();
            dimensionMapping_.addAll(other.dimensionMapping_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SpaceOuterClass.Image parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SpaceOuterClass.Image) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int compressionType_ = 0;
      /**
       * <code>.CompressionType compression_type = 1;</code>
       * @return The enum numeric value on the wire for compressionType.
       */
      @java.lang.Override public int getCompressionTypeValue() {
        return compressionType_;
      }
      /**
       * <code>.CompressionType compression_type = 1;</code>
       * @param value The enum numeric value on the wire for compressionType to set.
       * @return This builder for chaining.
       */
      public Builder setCompressionTypeValue(int value) {
        
        compressionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.CompressionType compression_type = 1;</code>
       * @return The compressionType.
       */
      @java.lang.Override
      public SpaceOuterClass.CompressionType getCompressionType() {
        @SuppressWarnings("deprecation")
        SpaceOuterClass.CompressionType result = SpaceOuterClass.CompressionType.valueOf(compressionType_);
        return result == null ? SpaceOuterClass.CompressionType.UNRECOGNIZED : result;
      }
      /**
       * <code>.CompressionType compression_type = 1;</code>
       * @param value The compressionType to set.
       * @return This builder for chaining.
       */
      public Builder setCompressionType(SpaceOuterClass.CompressionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        compressionType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.CompressionType compression_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompressionType() {
        
        compressionType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 2;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 2;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList shape_ = emptyIntList();
      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          shape_ = mutableCopy(shape_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * (H, W, C) or (H, W)
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @return A list containing the shape.
       */
      public java.util.List<java.lang.Integer>
          getShapeList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(shape_) : shape_;
      }
      /**
       * <pre>
       * (H, W, C) or (H, W)
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @return The count of shape.
       */
      public int getShapeCount() {
        return shape_.size();
      }
      /**
       * <pre>
       * (H, W, C) or (H, W)
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @param index The index of the element to return.
       * @return The shape at the given index.
       */
      public int getShape(int index) {
        return shape_.getInt(index);
      }
      /**
       * <pre>
       * (H, W, C) or (H, W)
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @param index The index to set the value at.
       * @param value The shape to set.
       * @return This builder for chaining.
       */
      public Builder setShape(
          int index, int value) {
        ensureShapeIsMutable();
        shape_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (H, W, C) or (H, W)
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @param value The shape to add.
       * @return This builder for chaining.
       */
      public Builder addShape(int value) {
        ensureShapeIsMutable();
        shape_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (H, W, C) or (H, W)
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @param values The shape to add.
       * @return This builder for chaining.
       */
      public Builder addAllShape(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureShapeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, shape_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (H, W, C) or (H, W)
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearShape() {
        shape_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList dimensionMapping_ = emptyIntList();
      private void ensureDimensionMappingIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          dimensionMapping_ = mutableCopy(dimensionMapping_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * (H, W, C) to [0, 1, 2]
       * </pre>
       *
       * <code>repeated int32 dimension_mapping = 4;</code>
       * @return A list containing the dimensionMapping.
       */
      public java.util.List<java.lang.Integer>
          getDimensionMappingList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(dimensionMapping_) : dimensionMapping_;
      }
      /**
       * <pre>
       * (H, W, C) to [0, 1, 2]
       * </pre>
       *
       * <code>repeated int32 dimension_mapping = 4;</code>
       * @return The count of dimensionMapping.
       */
      public int getDimensionMappingCount() {
        return dimensionMapping_.size();
      }
      /**
       * <pre>
       * (H, W, C) to [0, 1, 2]
       * </pre>
       *
       * <code>repeated int32 dimension_mapping = 4;</code>
       * @param index The index of the element to return.
       * @return The dimensionMapping at the given index.
       */
      public int getDimensionMapping(int index) {
        return dimensionMapping_.getInt(index);
      }
      /**
       * <pre>
       * (H, W, C) to [0, 1, 2]
       * </pre>
       *
       * <code>repeated int32 dimension_mapping = 4;</code>
       * @param index The index to set the value at.
       * @param value The dimensionMapping to set.
       * @return This builder for chaining.
       */
      public Builder setDimensionMapping(
          int index, int value) {
        ensureDimensionMappingIsMutable();
        dimensionMapping_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (H, W, C) to [0, 1, 2]
       * </pre>
       *
       * <code>repeated int32 dimension_mapping = 4;</code>
       * @param value The dimensionMapping to add.
       * @return This builder for chaining.
       */
      public Builder addDimensionMapping(int value) {
        ensureDimensionMappingIsMutable();
        dimensionMapping_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (H, W, C) to [0, 1, 2]
       * </pre>
       *
       * <code>repeated int32 dimension_mapping = 4;</code>
       * @param values The dimensionMapping to add.
       * @return This builder for chaining.
       */
      public Builder addAllDimensionMapping(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDimensionMappingIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dimensionMapping_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (H, W, C) to [0, 1, 2]
       * </pre>
       *
       * <code>repeated int32 dimension_mapping = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDimensionMapping() {
        dimensionMapping_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Image)
    }

    // @@protoc_insertion_point(class_scope:Image)
    private static final SpaceOuterClass.Image DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SpaceOuterClass.Image();
    }

    public static SpaceOuterClass.Image getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Image>
        PARSER = new com.google.protobuf.AbstractParser<Image>() {
      @java.lang.Override
      public Image parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Image(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Image> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Image> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SpaceOuterClass.Image getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpaceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Space)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.SpaceType space_type = 1;</code>
     * @return The enum numeric value on the wire for spaceType.
     */
    int getSpaceTypeValue();
    /**
     * <code>.SpaceType space_type = 1;</code>
     * @return The spaceType.
     */
    SpaceOuterClass.SpaceType getSpaceType();

    /**
     * <pre>
     * For raw data
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * For raw data
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * also the n of the MultiBinary
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @return A list containing the shape.
     */
    java.util.List<java.lang.Integer> getShapeList();
    /**
     * <pre>
     * also the n of the MultiBinary
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @return The count of shape.
     */
    int getShapeCount();
    /**
     * <pre>
     * also the n of the MultiBinary
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @param index The index of the element to return.
     * @return The shape at the given index.
     */
    int getShape(int index);

    /**
     * <code>string data_type = 4;</code>
     * @return The dataType.
     */
    java.lang.String getDataType();
    /**
     * <code>string data_type = 4;</code>
     * @return The bytes for dataType.
     */
    com.google.protobuf.ByteString
        getDataTypeBytes();

    /**
     * <code>repeated float low = 5;</code>
     * @return A list containing the low.
     */
    java.util.List<java.lang.Float> getLowList();
    /**
     * <code>repeated float low = 5;</code>
     * @return The count of low.
     */
    int getLowCount();
    /**
     * <code>repeated float low = 5;</code>
     * @param index The index of the element to return.
     * @return The low at the given index.
     */
    float getLow(int index);

    /**
     * <code>repeated float high = 6;</code>
     * @return A list containing the high.
     */
    java.util.List<java.lang.Float> getHighList();
    /**
     * <code>repeated float high = 6;</code>
     * @return The count of high.
     */
    int getHighCount();
    /**
     * <code>repeated float high = 6;</code>
     * @param index The index of the element to return.
     * @return The high at the given index.
     */
    float getHigh(int index);

    /**
     * <pre>
     * start of the Discrete, min_length of the Text
     * </pre>
     *
     * <code>int32 min = 7;</code>
     * @return The min.
     */
    int getMin();

    /**
     * <pre>
     * n of the Discrete, max_length of the Text
     * </pre>
     *
     * <code>int32 max = 8;</code>
     * @return The max.
     */
    int getMax();

    /**
     * <code>repeated int32 nvec = 9;</code>
     * @return A list containing the nvec.
     */
    java.util.List<java.lang.Integer> getNvecList();
    /**
     * <code>repeated int32 nvec = 9;</code>
     * @return The count of nvec.
     */
    int getNvecCount();
    /**
     * <code>repeated int32 nvec = 9;</code>
     * @param index The index of the element to return.
     * @return The nvec at the given index.
     */
    int getNvec(int index);

    /**
     * <code>repeated string charset = 10;</code>
     * @return A list containing the charset.
     */
    java.util.List<java.lang.String>
        getCharsetList();
    /**
     * <code>repeated string charset = 10;</code>
     * @return The count of charset.
     */
    int getCharsetCount();
    /**
     * <code>repeated string charset = 10;</code>
     * @param index The index of the element to return.
     * @return The charset at the given index.
     */
    java.lang.String getCharset(int index);
    /**
     * <code>repeated string charset = 10;</code>
     * @param index The index of the value to return.
     * @return The bytes of the charset at the given index.
     */
    com.google.protobuf.ByteString
        getCharsetBytes(int index);

    /**
     * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
     */
    int getDictSpaceCount();
    /**
     * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
     */
    boolean containsDictSpace(
        java.lang.String key);
    /**
     * Use {@link #getDictSpaceMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, SpaceOuterClass.Space>
    getDictSpace();
    /**
     * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
     */
    java.util.Map<java.lang.String, SpaceOuterClass.Space>
    getDictSpaceMap();
    /**
     * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
     */

    SpaceOuterClass.Space getDictSpaceOrDefault(
        java.lang.String key,
        SpaceOuterClass.Space defaultValue);
    /**
     * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
     */

    SpaceOuterClass.Space getDictSpaceOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
     */
    int getListSpaceCount();
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
     */
    boolean containsListSpace(
        int key);
    /**
     * Use {@link #getListSpaceMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, SpaceOuterClass.Space>
    getListSpace();
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
     */
    java.util.Map<java.lang.Integer, SpaceOuterClass.Space>
    getListSpaceMap();
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
     */

    SpaceOuterClass.Space getListSpaceOrDefault(
        int key,
        SpaceOuterClass.Space defaultValue);
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
     */

    SpaceOuterClass.Space getListSpaceOrThrow(
        int key);

    /**
     * <code>.GraphSpace graph_space = 13;</code>
     * @return Whether the graphSpace field is set.
     */
    boolean hasGraphSpace();
    /**
     * <code>.GraphSpace graph_space = 13;</code>
     * @return The graphSpace.
     */
    SpaceOuterClass.GraphSpace getGraphSpace();
    /**
     * <code>.GraphSpace graph_space = 13;</code>
     */
    SpaceOuterClass.GraphSpaceOrBuilder getGraphSpaceOrBuilder();
  }
  /**
   * Protobuf type {@code Space}
   */
  public static final class Space extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Space)
      SpaceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Space.newBuilder() to construct.
    private Space(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Space() {
      spaceType_ = 0;
      description_ = "";
      shape_ = emptyIntList();
      dataType_ = "";
      low_ = emptyFloatList();
      high_ = emptyFloatList();
      nvec_ = emptyIntList();
      charset_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Space();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Space(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              spaceType_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                shape_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              shape_.addInt(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                shape_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                shape_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              dataType_ = s;
              break;
            }
            case 45: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                low_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              low_.addFloat(input.readFloat());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                low_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                low_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 53: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                high_ = newFloatList();
                mutable_bitField0_ |= 0x00000004;
              }
              high_.addFloat(input.readFloat());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                high_ = newFloatList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                high_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {

              min_ = input.readInt32();
              break;
            }
            case 64: {

              max_ = input.readInt32();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                nvec_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              nvec_.addInt(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                nvec_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                nvec_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                charset_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              charset_.add(s);
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                dictSpace_ = com.google.protobuf.MapField.newMapField(
                    DictSpaceDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, SpaceOuterClass.Space>
              dictSpace__ = input.readMessage(
                  DictSpaceDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              dictSpace_.getMutableMap().put(
                  dictSpace__.getKey(), dictSpace__.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                listSpace_ = com.google.protobuf.MapField.newMapField(
                    ListSpaceDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, SpaceOuterClass.Space>
              listSpace__ = input.readMessage(
                  ListSpaceDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              listSpace_.getMutableMap().put(
                  listSpace__.getKey(), listSpace__.getValue());
              break;
            }
            case 106: {
              SpaceOuterClass.GraphSpace.Builder subBuilder = null;
              if (graphSpace_ != null) {
                subBuilder = graphSpace_.toBuilder();
              }
              graphSpace_ = input.readMessage(SpaceOuterClass.GraphSpace.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(graphSpace_);
                graphSpace_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          shape_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          low_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          high_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          nvec_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          charset_ = charset_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SpaceOuterClass.internal_static_Space_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 11:
          return internalGetDictSpace();
        case 12:
          return internalGetListSpace();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SpaceOuterClass.internal_static_Space_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SpaceOuterClass.Space.class, SpaceOuterClass.Space.Builder.class);
    }

    public static final int SPACE_TYPE_FIELD_NUMBER = 1;
    private int spaceType_;
    /**
     * <code>.SpaceType space_type = 1;</code>
     * @return The enum numeric value on the wire for spaceType.
     */
    @java.lang.Override public int getSpaceTypeValue() {
      return spaceType_;
    }
    /**
     * <code>.SpaceType space_type = 1;</code>
     * @return The spaceType.
     */
    @java.lang.Override public SpaceOuterClass.SpaceType getSpaceType() {
      @SuppressWarnings("deprecation")
      SpaceOuterClass.SpaceType result = SpaceOuterClass.SpaceType.valueOf(spaceType_);
      return result == null ? SpaceOuterClass.SpaceType.UNRECOGNIZED : result;
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * For raw data
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * For raw data
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHAPE_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList shape_;
    /**
     * <pre>
     * also the n of the MultiBinary
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @return A list containing the shape.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getShapeList() {
      return shape_;
    }
    /**
     * <pre>
     * also the n of the MultiBinary
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @return The count of shape.
     */
    public int getShapeCount() {
      return shape_.size();
    }
    /**
     * <pre>
     * also the n of the MultiBinary
     * </pre>
     *
     * <code>repeated int32 shape = 3;</code>
     * @param index The index of the element to return.
     * @return The shape at the given index.
     */
    public int getShape(int index) {
      return shape_.getInt(index);
    }
    private int shapeMemoizedSerializedSize = -1;

    public static final int DATA_TYPE_FIELD_NUMBER = 4;
    private volatile java.lang.Object dataType_;
    /**
     * <code>string data_type = 4;</code>
     * @return The dataType.
     */
    @java.lang.Override
    public java.lang.String getDataType() {
      java.lang.Object ref = dataType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataType_ = s;
        return s;
      }
    }
    /**
     * <code>string data_type = 4;</code>
     * @return The bytes for dataType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDataTypeBytes() {
      java.lang.Object ref = dataType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOW_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.FloatList low_;
    /**
     * <code>repeated float low = 5;</code>
     * @return A list containing the low.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getLowList() {
      return low_;
    }
    /**
     * <code>repeated float low = 5;</code>
     * @return The count of low.
     */
    public int getLowCount() {
      return low_.size();
    }
    /**
     * <code>repeated float low = 5;</code>
     * @param index The index of the element to return.
     * @return The low at the given index.
     */
    public float getLow(int index) {
      return low_.getFloat(index);
    }
    private int lowMemoizedSerializedSize = -1;

    public static final int HIGH_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.FloatList high_;
    /**
     * <code>repeated float high = 6;</code>
     * @return A list containing the high.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getHighList() {
      return high_;
    }
    /**
     * <code>repeated float high = 6;</code>
     * @return The count of high.
     */
    public int getHighCount() {
      return high_.size();
    }
    /**
     * <code>repeated float high = 6;</code>
     * @param index The index of the element to return.
     * @return The high at the given index.
     */
    public float getHigh(int index) {
      return high_.getFloat(index);
    }
    private int highMemoizedSerializedSize = -1;

    public static final int MIN_FIELD_NUMBER = 7;
    private int min_;
    /**
     * <pre>
     * start of the Discrete, min_length of the Text
     * </pre>
     *
     * <code>int32 min = 7;</code>
     * @return The min.
     */
    @java.lang.Override
    public int getMin() {
      return min_;
    }

    public static final int MAX_FIELD_NUMBER = 8;
    private int max_;
    /**
     * <pre>
     * n of the Discrete, max_length of the Text
     * </pre>
     *
     * <code>int32 max = 8;</code>
     * @return The max.
     */
    @java.lang.Override
    public int getMax() {
      return max_;
    }

    public static final int NVEC_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.IntList nvec_;
    /**
     * <code>repeated int32 nvec = 9;</code>
     * @return A list containing the nvec.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getNvecList() {
      return nvec_;
    }
    /**
     * <code>repeated int32 nvec = 9;</code>
     * @return The count of nvec.
     */
    public int getNvecCount() {
      return nvec_.size();
    }
    /**
     * <code>repeated int32 nvec = 9;</code>
     * @param index The index of the element to return.
     * @return The nvec at the given index.
     */
    public int getNvec(int index) {
      return nvec_.getInt(index);
    }
    private int nvecMemoizedSerializedSize = -1;

    public static final int CHARSET_FIELD_NUMBER = 10;
    private com.google.protobuf.LazyStringList charset_;
    /**
     * <code>repeated string charset = 10;</code>
     * @return A list containing the charset.
     */
    public com.google.protobuf.ProtocolStringList
        getCharsetList() {
      return charset_;
    }
    /**
     * <code>repeated string charset = 10;</code>
     * @return The count of charset.
     */
    public int getCharsetCount() {
      return charset_.size();
    }
    /**
     * <code>repeated string charset = 10;</code>
     * @param index The index of the element to return.
     * @return The charset at the given index.
     */
    public java.lang.String getCharset(int index) {
      return charset_.get(index);
    }
    /**
     * <code>repeated string charset = 10;</code>
     * @param index The index of the value to return.
     * @return The bytes of the charset at the given index.
     */
    public com.google.protobuf.ByteString
        getCharsetBytes(int index) {
      return charset_.getByteString(index);
    }

    public static final int DICT_SPACE_FIELD_NUMBER = 11;
    private static final class DictSpaceDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, SpaceOuterClass.Space> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, SpaceOuterClass.Space>newDefaultInstance(
                  SpaceOuterClass.internal_static_Space_DictSpaceEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  SpaceOuterClass.Space.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, SpaceOuterClass.Space> dictSpace_;
    private com.google.protobuf.MapField<java.lang.String, SpaceOuterClass.Space>
    internalGetDictSpace() {
      if (dictSpace_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DictSpaceDefaultEntryHolder.defaultEntry);
      }
      return dictSpace_;
    }

    public int getDictSpaceCount() {
      return internalGetDictSpace().getMap().size();
    }
    /**
     * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
     */

    @java.lang.Override
    public boolean containsDictSpace(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetDictSpace().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDictSpaceMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, SpaceOuterClass.Space> getDictSpace() {
      return getDictSpaceMap();
    }
    /**
     * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, SpaceOuterClass.Space> getDictSpaceMap() {
      return internalGetDictSpace().getMap();
    }
    /**
     * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
     */
    @java.lang.Override

    public SpaceOuterClass.Space getDictSpaceOrDefault(
        java.lang.String key,
        SpaceOuterClass.Space defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, SpaceOuterClass.Space> map =
          internalGetDictSpace().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
     */
    @java.lang.Override

    public SpaceOuterClass.Space getDictSpaceOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, SpaceOuterClass.Space> map =
          internalGetDictSpace().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LIST_SPACE_FIELD_NUMBER = 12;
    private static final class ListSpaceDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, SpaceOuterClass.Space> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, SpaceOuterClass.Space>newDefaultInstance(
                  SpaceOuterClass.internal_static_Space_ListSpaceEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  SpaceOuterClass.Space.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, SpaceOuterClass.Space> listSpace_;
    private com.google.protobuf.MapField<java.lang.Integer, SpaceOuterClass.Space>
    internalGetListSpace() {
      if (listSpace_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ListSpaceDefaultEntryHolder.defaultEntry);
      }
      return listSpace_;
    }

    public int getListSpaceCount() {
      return internalGetListSpace().getMap().size();
    }
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
     */

    @java.lang.Override
    public boolean containsListSpace(
        int key) {
      
      return internalGetListSpace().getMap().containsKey(key);
    }
    /**
     * Use {@link #getListSpaceMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, SpaceOuterClass.Space> getListSpace() {
      return getListSpaceMap();
    }
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, SpaceOuterClass.Space> getListSpaceMap() {
      return internalGetListSpace().getMap();
    }
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
     */
    @java.lang.Override

    public SpaceOuterClass.Space getListSpaceOrDefault(
        int key,
        SpaceOuterClass.Space defaultValue) {
      
      java.util.Map<java.lang.Integer, SpaceOuterClass.Space> map =
          internalGetListSpace().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
     */
    @java.lang.Override

    public SpaceOuterClass.Space getListSpaceOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, SpaceOuterClass.Space> map =
          internalGetListSpace().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int GRAPH_SPACE_FIELD_NUMBER = 13;
    private SpaceOuterClass.GraphSpace graphSpace_;
    /**
     * <code>.GraphSpace graph_space = 13;</code>
     * @return Whether the graphSpace field is set.
     */
    @java.lang.Override
    public boolean hasGraphSpace() {
      return graphSpace_ != null;
    }
    /**
     * <code>.GraphSpace graph_space = 13;</code>
     * @return The graphSpace.
     */
    @java.lang.Override
    public SpaceOuterClass.GraphSpace getGraphSpace() {
      return graphSpace_ == null ? SpaceOuterClass.GraphSpace.getDefaultInstance() : graphSpace_;
    }
    /**
     * <code>.GraphSpace graph_space = 13;</code>
     */
    @java.lang.Override
    public SpaceOuterClass.GraphSpaceOrBuilder getGraphSpaceOrBuilder() {
      return getGraphSpace();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (spaceType_ != SpaceOuterClass.SpaceType.SPACE_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, spaceType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      if (getShapeList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(shapeMemoizedSerializedSize);
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeInt32NoTag(shape_.getInt(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataType_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, dataType_);
      }
      if (getLowList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(lowMemoizedSerializedSize);
      }
      for (int i = 0; i < low_.size(); i++) {
        output.writeFloatNoTag(low_.getFloat(i));
      }
      if (getHighList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(highMemoizedSerializedSize);
      }
      for (int i = 0; i < high_.size(); i++) {
        output.writeFloatNoTag(high_.getFloat(i));
      }
      if (min_ != 0) {
        output.writeInt32(7, min_);
      }
      if (max_ != 0) {
        output.writeInt32(8, max_);
      }
      if (getNvecList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(nvecMemoizedSerializedSize);
      }
      for (int i = 0; i < nvec_.size(); i++) {
        output.writeInt32NoTag(nvec_.getInt(i));
      }
      for (int i = 0; i < charset_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, charset_.getRaw(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetDictSpace(),
          DictSpaceDefaultEntryHolder.defaultEntry,
          11);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetListSpace(),
          ListSpaceDefaultEntryHolder.defaultEntry,
          12);
      if (graphSpace_ != null) {
        output.writeMessage(13, getGraphSpace());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (spaceType_ != SpaceOuterClass.SpaceType.SPACE_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, spaceType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shape_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(shape_.getInt(i));
        }
        size += dataSize;
        if (!getShapeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        shapeMemoizedSerializedSize = dataSize;
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataType_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, dataType_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getLowList().size();
        size += dataSize;
        if (!getLowList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lowMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getHighList().size();
        size += dataSize;
        if (!getHighList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        highMemoizedSerializedSize = dataSize;
      }
      if (min_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, min_);
      }
      if (max_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, max_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < nvec_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(nvec_.getInt(i));
        }
        size += dataSize;
        if (!getNvecList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        nvecMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < charset_.size(); i++) {
          dataSize += computeStringSizeNoTag(charset_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCharsetList().size();
      }
      for (java.util.Map.Entry<java.lang.String, SpaceOuterClass.Space> entry
           : internalGetDictSpace().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, SpaceOuterClass.Space>
        dictSpace__ = DictSpaceDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, dictSpace__);
      }
      for (java.util.Map.Entry<java.lang.Integer, SpaceOuterClass.Space> entry
           : internalGetListSpace().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, SpaceOuterClass.Space>
        listSpace__ = ListSpaceDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, listSpace__);
      }
      if (graphSpace_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getGraphSpace());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SpaceOuterClass.Space)) {
        return super.equals(obj);
      }
      SpaceOuterClass.Space other = (SpaceOuterClass.Space) obj;

      if (spaceType_ != other.spaceType_) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getShapeList()
          .equals(other.getShapeList())) return false;
      if (!getDataType()
          .equals(other.getDataType())) return false;
      if (!getLowList()
          .equals(other.getLowList())) return false;
      if (!getHighList()
          .equals(other.getHighList())) return false;
      if (getMin()
          != other.getMin()) return false;
      if (getMax()
          != other.getMax()) return false;
      if (!getNvecList()
          .equals(other.getNvecList())) return false;
      if (!getCharsetList()
          .equals(other.getCharsetList())) return false;
      if (!internalGetDictSpace().equals(
          other.internalGetDictSpace())) return false;
      if (!internalGetListSpace().equals(
          other.internalGetListSpace())) return false;
      if (hasGraphSpace() != other.hasGraphSpace()) return false;
      if (hasGraphSpace()) {
        if (!getGraphSpace()
            .equals(other.getGraphSpace())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SPACE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + spaceType_;
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      if (getShapeCount() > 0) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShapeList().hashCode();
      }
      hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDataType().hashCode();
      if (getLowCount() > 0) {
        hash = (37 * hash) + LOW_FIELD_NUMBER;
        hash = (53 * hash) + getLowList().hashCode();
      }
      if (getHighCount() > 0) {
        hash = (37 * hash) + HIGH_FIELD_NUMBER;
        hash = (53 * hash) + getHighList().hashCode();
      }
      hash = (37 * hash) + MIN_FIELD_NUMBER;
      hash = (53 * hash) + getMin();
      hash = (37 * hash) + MAX_FIELD_NUMBER;
      hash = (53 * hash) + getMax();
      if (getNvecCount() > 0) {
        hash = (37 * hash) + NVEC_FIELD_NUMBER;
        hash = (53 * hash) + getNvecList().hashCode();
      }
      if (getCharsetCount() > 0) {
        hash = (37 * hash) + CHARSET_FIELD_NUMBER;
        hash = (53 * hash) + getCharsetList().hashCode();
      }
      if (!internalGetDictSpace().getMap().isEmpty()) {
        hash = (37 * hash) + DICT_SPACE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDictSpace().hashCode();
      }
      if (!internalGetListSpace().getMap().isEmpty()) {
        hash = (37 * hash) + LIST_SPACE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetListSpace().hashCode();
      }
      if (hasGraphSpace()) {
        hash = (37 * hash) + GRAPH_SPACE_FIELD_NUMBER;
        hash = (53 * hash) + getGraphSpace().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SpaceOuterClass.Space parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Space parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Space parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Space parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Space parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Space parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Space parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Space parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.Space parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Space parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.Space parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Space parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SpaceOuterClass.Space prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Space}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Space)
        SpaceOuterClass.SpaceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SpaceOuterClass.internal_static_Space_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetDictSpace();
          case 12:
            return internalGetListSpace();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetMutableDictSpace();
          case 12:
            return internalGetMutableListSpace();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SpaceOuterClass.internal_static_Space_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SpaceOuterClass.Space.class, SpaceOuterClass.Space.Builder.class);
      }

      // Construct using SpaceOuterClass.Space.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        spaceType_ = 0;

        description_ = "";

        shape_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        dataType_ = "";

        low_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        high_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        min_ = 0;

        max_ = 0;

        nvec_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        charset_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        internalGetMutableDictSpace().clear();
        internalGetMutableListSpace().clear();
        if (graphSpaceBuilder_ == null) {
          graphSpace_ = null;
        } else {
          graphSpace_ = null;
          graphSpaceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SpaceOuterClass.internal_static_Space_descriptor;
      }

      @java.lang.Override
      public SpaceOuterClass.Space getDefaultInstanceForType() {
        return SpaceOuterClass.Space.getDefaultInstance();
      }

      @java.lang.Override
      public SpaceOuterClass.Space build() {
        SpaceOuterClass.Space result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SpaceOuterClass.Space buildPartial() {
        SpaceOuterClass.Space result = new SpaceOuterClass.Space(this);
        int from_bitField0_ = bitField0_;
        result.spaceType_ = spaceType_;
        result.description_ = description_;
        if (((bitField0_ & 0x00000001) != 0)) {
          shape_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.shape_ = shape_;
        result.dataType_ = dataType_;
        if (((bitField0_ & 0x00000002) != 0)) {
          low_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.low_ = low_;
        if (((bitField0_ & 0x00000004) != 0)) {
          high_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.high_ = high_;
        result.min_ = min_;
        result.max_ = max_;
        if (((bitField0_ & 0x00000008) != 0)) {
          nvec_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.nvec_ = nvec_;
        if (((bitField0_ & 0x00000010) != 0)) {
          charset_ = charset_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.charset_ = charset_;
        result.dictSpace_ = internalGetDictSpace();
        result.dictSpace_.makeImmutable();
        result.listSpace_ = internalGetListSpace();
        result.listSpace_.makeImmutable();
        if (graphSpaceBuilder_ == null) {
          result.graphSpace_ = graphSpace_;
        } else {
          result.graphSpace_ = graphSpaceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SpaceOuterClass.Space) {
          return mergeFrom((SpaceOuterClass.Space)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SpaceOuterClass.Space other) {
        if (other == SpaceOuterClass.Space.getDefaultInstance()) return this;
        if (other.spaceType_ != 0) {
          setSpaceTypeValue(other.getSpaceTypeValue());
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.shape_.isEmpty()) {
          if (shape_.isEmpty()) {
            shape_ = other.shape_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureShapeIsMutable();
            shape_.addAll(other.shape_);
          }
          onChanged();
        }
        if (!other.getDataType().isEmpty()) {
          dataType_ = other.dataType_;
          onChanged();
        }
        if (!other.low_.isEmpty()) {
          if (low_.isEmpty()) {
            low_ = other.low_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureLowIsMutable();
            low_.addAll(other.low_);
          }
          onChanged();
        }
        if (!other.high_.isEmpty()) {
          if (high_.isEmpty()) {
            high_ = other.high_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureHighIsMutable();
            high_.addAll(other.high_);
          }
          onChanged();
        }
        if (other.getMin() != 0) {
          setMin(other.getMin());
        }
        if (other.getMax() != 0) {
          setMax(other.getMax());
        }
        if (!other.nvec_.isEmpty()) {
          if (nvec_.isEmpty()) {
            nvec_ = other.nvec_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureNvecIsMutable();
            nvec_.addAll(other.nvec_);
          }
          onChanged();
        }
        if (!other.charset_.isEmpty()) {
          if (charset_.isEmpty()) {
            charset_ = other.charset_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCharsetIsMutable();
            charset_.addAll(other.charset_);
          }
          onChanged();
        }
        internalGetMutableDictSpace().mergeFrom(
            other.internalGetDictSpace());
        internalGetMutableListSpace().mergeFrom(
            other.internalGetListSpace());
        if (other.hasGraphSpace()) {
          mergeGraphSpace(other.getGraphSpace());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SpaceOuterClass.Space parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SpaceOuterClass.Space) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int spaceType_ = 0;
      /**
       * <code>.SpaceType space_type = 1;</code>
       * @return The enum numeric value on the wire for spaceType.
       */
      @java.lang.Override public int getSpaceTypeValue() {
        return spaceType_;
      }
      /**
       * <code>.SpaceType space_type = 1;</code>
       * @param value The enum numeric value on the wire for spaceType to set.
       * @return This builder for chaining.
       */
      public Builder setSpaceTypeValue(int value) {
        
        spaceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.SpaceType space_type = 1;</code>
       * @return The spaceType.
       */
      @java.lang.Override
      public SpaceOuterClass.SpaceType getSpaceType() {
        @SuppressWarnings("deprecation")
        SpaceOuterClass.SpaceType result = SpaceOuterClass.SpaceType.valueOf(spaceType_);
        return result == null ? SpaceOuterClass.SpaceType.UNRECOGNIZED : result;
      }
      /**
       * <code>.SpaceType space_type = 1;</code>
       * @param value The spaceType to set.
       * @return This builder for chaining.
       */
      public Builder setSpaceType(SpaceOuterClass.SpaceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        spaceType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.SpaceType space_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpaceType() {
        
        spaceType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * For raw data
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * For raw data
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * For raw data
       * </pre>
       *
       * <code>string description = 2;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For raw data
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For raw data
       * </pre>
       *
       * <code>string description = 2;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList shape_ = emptyIntList();
      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          shape_ = mutableCopy(shape_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * also the n of the MultiBinary
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @return A list containing the shape.
       */
      public java.util.List<java.lang.Integer>
          getShapeList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(shape_) : shape_;
      }
      /**
       * <pre>
       * also the n of the MultiBinary
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @return The count of shape.
       */
      public int getShapeCount() {
        return shape_.size();
      }
      /**
       * <pre>
       * also the n of the MultiBinary
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @param index The index of the element to return.
       * @return The shape at the given index.
       */
      public int getShape(int index) {
        return shape_.getInt(index);
      }
      /**
       * <pre>
       * also the n of the MultiBinary
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @param index The index to set the value at.
       * @param value The shape to set.
       * @return This builder for chaining.
       */
      public Builder setShape(
          int index, int value) {
        ensureShapeIsMutable();
        shape_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * also the n of the MultiBinary
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @param value The shape to add.
       * @return This builder for chaining.
       */
      public Builder addShape(int value) {
        ensureShapeIsMutable();
        shape_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * also the n of the MultiBinary
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @param values The shape to add.
       * @return This builder for chaining.
       */
      public Builder addAllShape(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureShapeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, shape_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * also the n of the MultiBinary
       * </pre>
       *
       * <code>repeated int32 shape = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearShape() {
        shape_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.lang.Object dataType_ = "";
      /**
       * <code>string data_type = 4;</code>
       * @return The dataType.
       */
      public java.lang.String getDataType() {
        java.lang.Object ref = dataType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dataType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string data_type = 4;</code>
       * @return The bytes for dataType.
       */
      public com.google.protobuf.ByteString
          getDataTypeBytes() {
        java.lang.Object ref = dataType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string data_type = 4;</code>
       * @param value The dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string data_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataType() {
        
        dataType_ = getDefaultInstance().getDataType();
        onChanged();
        return this;
      }
      /**
       * <code>string data_type = 4;</code>
       * @param value The bytes for dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dataType_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList low_ = emptyFloatList();
      private void ensureLowIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          low_ = mutableCopy(low_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float low = 5;</code>
       * @return A list containing the low.
       */
      public java.util.List<java.lang.Float>
          getLowList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(low_) : low_;
      }
      /**
       * <code>repeated float low = 5;</code>
       * @return The count of low.
       */
      public int getLowCount() {
        return low_.size();
      }
      /**
       * <code>repeated float low = 5;</code>
       * @param index The index of the element to return.
       * @return The low at the given index.
       */
      public float getLow(int index) {
        return low_.getFloat(index);
      }
      /**
       * <code>repeated float low = 5;</code>
       * @param index The index to set the value at.
       * @param value The low to set.
       * @return This builder for chaining.
       */
      public Builder setLow(
          int index, float value) {
        ensureLowIsMutable();
        low_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float low = 5;</code>
       * @param value The low to add.
       * @return This builder for chaining.
       */
      public Builder addLow(float value) {
        ensureLowIsMutable();
        low_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float low = 5;</code>
       * @param values The low to add.
       * @return This builder for chaining.
       */
      public Builder addAllLow(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureLowIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, low_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float low = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLow() {
        low_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList high_ = emptyFloatList();
      private void ensureHighIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          high_ = mutableCopy(high_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated float high = 6;</code>
       * @return A list containing the high.
       */
      public java.util.List<java.lang.Float>
          getHighList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(high_) : high_;
      }
      /**
       * <code>repeated float high = 6;</code>
       * @return The count of high.
       */
      public int getHighCount() {
        return high_.size();
      }
      /**
       * <code>repeated float high = 6;</code>
       * @param index The index of the element to return.
       * @return The high at the given index.
       */
      public float getHigh(int index) {
        return high_.getFloat(index);
      }
      /**
       * <code>repeated float high = 6;</code>
       * @param index The index to set the value at.
       * @param value The high to set.
       * @return This builder for chaining.
       */
      public Builder setHigh(
          int index, float value) {
        ensureHighIsMutable();
        high_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float high = 6;</code>
       * @param value The high to add.
       * @return This builder for chaining.
       */
      public Builder addHigh(float value) {
        ensureHighIsMutable();
        high_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float high = 6;</code>
       * @param values The high to add.
       * @return This builder for chaining.
       */
      public Builder addAllHigh(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureHighIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, high_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float high = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHigh() {
        high_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int min_ ;
      /**
       * <pre>
       * start of the Discrete, min_length of the Text
       * </pre>
       *
       * <code>int32 min = 7;</code>
       * @return The min.
       */
      @java.lang.Override
      public int getMin() {
        return min_;
      }
      /**
       * <pre>
       * start of the Discrete, min_length of the Text
       * </pre>
       *
       * <code>int32 min = 7;</code>
       * @param value The min to set.
       * @return This builder for chaining.
       */
      public Builder setMin(int value) {
        
        min_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * start of the Discrete, min_length of the Text
       * </pre>
       *
       * <code>int32 min = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMin() {
        
        min_ = 0;
        onChanged();
        return this;
      }

      private int max_ ;
      /**
       * <pre>
       * n of the Discrete, max_length of the Text
       * </pre>
       *
       * <code>int32 max = 8;</code>
       * @return The max.
       */
      @java.lang.Override
      public int getMax() {
        return max_;
      }
      /**
       * <pre>
       * n of the Discrete, max_length of the Text
       * </pre>
       *
       * <code>int32 max = 8;</code>
       * @param value The max to set.
       * @return This builder for chaining.
       */
      public Builder setMax(int value) {
        
        max_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * n of the Discrete, max_length of the Text
       * </pre>
       *
       * <code>int32 max = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMax() {
        
        max_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList nvec_ = emptyIntList();
      private void ensureNvecIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          nvec_ = mutableCopy(nvec_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 nvec = 9;</code>
       * @return A list containing the nvec.
       */
      public java.util.List<java.lang.Integer>
          getNvecList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(nvec_) : nvec_;
      }
      /**
       * <code>repeated int32 nvec = 9;</code>
       * @return The count of nvec.
       */
      public int getNvecCount() {
        return nvec_.size();
      }
      /**
       * <code>repeated int32 nvec = 9;</code>
       * @param index The index of the element to return.
       * @return The nvec at the given index.
       */
      public int getNvec(int index) {
        return nvec_.getInt(index);
      }
      /**
       * <code>repeated int32 nvec = 9;</code>
       * @param index The index to set the value at.
       * @param value The nvec to set.
       * @return This builder for chaining.
       */
      public Builder setNvec(
          int index, int value) {
        ensureNvecIsMutable();
        nvec_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 nvec = 9;</code>
       * @param value The nvec to add.
       * @return This builder for chaining.
       */
      public Builder addNvec(int value) {
        ensureNvecIsMutable();
        nvec_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 nvec = 9;</code>
       * @param values The nvec to add.
       * @return This builder for chaining.
       */
      public Builder addAllNvec(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNvecIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nvec_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 nvec = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearNvec() {
        nvec_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList charset_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCharsetIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          charset_ = new com.google.protobuf.LazyStringArrayList(charset_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string charset = 10;</code>
       * @return A list containing the charset.
       */
      public com.google.protobuf.ProtocolStringList
          getCharsetList() {
        return charset_.getUnmodifiableView();
      }
      /**
       * <code>repeated string charset = 10;</code>
       * @return The count of charset.
       */
      public int getCharsetCount() {
        return charset_.size();
      }
      /**
       * <code>repeated string charset = 10;</code>
       * @param index The index of the element to return.
       * @return The charset at the given index.
       */
      public java.lang.String getCharset(int index) {
        return charset_.get(index);
      }
      /**
       * <code>repeated string charset = 10;</code>
       * @param index The index of the value to return.
       * @return The bytes of the charset at the given index.
       */
      public com.google.protobuf.ByteString
          getCharsetBytes(int index) {
        return charset_.getByteString(index);
      }
      /**
       * <code>repeated string charset = 10;</code>
       * @param index The index to set the value at.
       * @param value The charset to set.
       * @return This builder for chaining.
       */
      public Builder setCharset(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCharsetIsMutable();
        charset_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string charset = 10;</code>
       * @param value The charset to add.
       * @return This builder for chaining.
       */
      public Builder addCharset(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCharsetIsMutable();
        charset_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string charset = 10;</code>
       * @param values The charset to add.
       * @return This builder for chaining.
       */
      public Builder addAllCharset(
          java.lang.Iterable<java.lang.String> values) {
        ensureCharsetIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, charset_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string charset = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCharset() {
        charset_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string charset = 10;</code>
       * @param value The bytes of the charset to add.
       * @return This builder for chaining.
       */
      public Builder addCharsetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureCharsetIsMutable();
        charset_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, SpaceOuterClass.Space> dictSpace_;
      private com.google.protobuf.MapField<java.lang.String, SpaceOuterClass.Space>
      internalGetDictSpace() {
        if (dictSpace_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DictSpaceDefaultEntryHolder.defaultEntry);
        }
        return dictSpace_;
      }
      private com.google.protobuf.MapField<java.lang.String, SpaceOuterClass.Space>
      internalGetMutableDictSpace() {
        onChanged();;
        if (dictSpace_ == null) {
          dictSpace_ = com.google.protobuf.MapField.newMapField(
              DictSpaceDefaultEntryHolder.defaultEntry);
        }
        if (!dictSpace_.isMutable()) {
          dictSpace_ = dictSpace_.copy();
        }
        return dictSpace_;
      }

      public int getDictSpaceCount() {
        return internalGetDictSpace().getMap().size();
      }
      /**
       * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
       */

      @java.lang.Override
      public boolean containsDictSpace(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetDictSpace().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDictSpaceMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, SpaceOuterClass.Space> getDictSpace() {
        return getDictSpaceMap();
      }
      /**
       * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, SpaceOuterClass.Space> getDictSpaceMap() {
        return internalGetDictSpace().getMap();
      }
      /**
       * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
       */
      @java.lang.Override

      public SpaceOuterClass.Space getDictSpaceOrDefault(
          java.lang.String key,
          SpaceOuterClass.Space defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, SpaceOuterClass.Space> map =
            internalGetDictSpace().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
       */
      @java.lang.Override

      public SpaceOuterClass.Space getDictSpaceOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, SpaceOuterClass.Space> map =
            internalGetDictSpace().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearDictSpace() {
        internalGetMutableDictSpace().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
       */

      public Builder removeDictSpace(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableDictSpace().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, SpaceOuterClass.Space>
      getMutableDictSpace() {
        return internalGetMutableDictSpace().getMutableMap();
      }
      /**
       * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
       */
      public Builder putDictSpace(
          java.lang.String key,
          SpaceOuterClass.Space value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableDictSpace().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .Space&gt; dict_space = 11;</code>
       */

      public Builder putAllDictSpace(
          java.util.Map<java.lang.String, SpaceOuterClass.Space> values) {
        internalGetMutableDictSpace().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, SpaceOuterClass.Space> listSpace_;
      private com.google.protobuf.MapField<java.lang.Integer, SpaceOuterClass.Space>
      internalGetListSpace() {
        if (listSpace_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ListSpaceDefaultEntryHolder.defaultEntry);
        }
        return listSpace_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, SpaceOuterClass.Space>
      internalGetMutableListSpace() {
        onChanged();;
        if (listSpace_ == null) {
          listSpace_ = com.google.protobuf.MapField.newMapField(
              ListSpaceDefaultEntryHolder.defaultEntry);
        }
        if (!listSpace_.isMutable()) {
          listSpace_ = listSpace_.copy();
        }
        return listSpace_;
      }

      public int getListSpaceCount() {
        return internalGetListSpace().getMap().size();
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
       */

      @java.lang.Override
      public boolean containsListSpace(
          int key) {
        
        return internalGetListSpace().getMap().containsKey(key);
      }
      /**
       * Use {@link #getListSpaceMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, SpaceOuterClass.Space> getListSpace() {
        return getListSpaceMap();
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, SpaceOuterClass.Space> getListSpaceMap() {
        return internalGetListSpace().getMap();
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
       */
      @java.lang.Override

      public SpaceOuterClass.Space getListSpaceOrDefault(
          int key,
          SpaceOuterClass.Space defaultValue) {
        
        java.util.Map<java.lang.Integer, SpaceOuterClass.Space> map =
            internalGetListSpace().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
       */
      @java.lang.Override

      public SpaceOuterClass.Space getListSpaceOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, SpaceOuterClass.Space> map =
            internalGetListSpace().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearListSpace() {
        internalGetMutableListSpace().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
       */

      public Builder removeListSpace(
          int key) {
        
        internalGetMutableListSpace().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, SpaceOuterClass.Space>
      getMutableListSpace() {
        return internalGetMutableListSpace().getMutableMap();
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
       */
      public Builder putListSpace(
          int key,
          SpaceOuterClass.Space value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableListSpace().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Space&gt; list_space = 12;</code>
       */

      public Builder putAllListSpace(
          java.util.Map<java.lang.Integer, SpaceOuterClass.Space> values) {
        internalGetMutableListSpace().getMutableMap()
            .putAll(values);
        return this;
      }

      private SpaceOuterClass.GraphSpace graphSpace_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.GraphSpace, SpaceOuterClass.GraphSpace.Builder, SpaceOuterClass.GraphSpaceOrBuilder> graphSpaceBuilder_;
      /**
       * <code>.GraphSpace graph_space = 13;</code>
       * @return Whether the graphSpace field is set.
       */
      public boolean hasGraphSpace() {
        return graphSpaceBuilder_ != null || graphSpace_ != null;
      }
      /**
       * <code>.GraphSpace graph_space = 13;</code>
       * @return The graphSpace.
       */
      public SpaceOuterClass.GraphSpace getGraphSpace() {
        if (graphSpaceBuilder_ == null) {
          return graphSpace_ == null ? SpaceOuterClass.GraphSpace.getDefaultInstance() : graphSpace_;
        } else {
          return graphSpaceBuilder_.getMessage();
        }
      }
      /**
       * <code>.GraphSpace graph_space = 13;</code>
       */
      public Builder setGraphSpace(SpaceOuterClass.GraphSpace value) {
        if (graphSpaceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          graphSpace_ = value;
          onChanged();
        } else {
          graphSpaceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.GraphSpace graph_space = 13;</code>
       */
      public Builder setGraphSpace(
          SpaceOuterClass.GraphSpace.Builder builderForValue) {
        if (graphSpaceBuilder_ == null) {
          graphSpace_ = builderForValue.build();
          onChanged();
        } else {
          graphSpaceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.GraphSpace graph_space = 13;</code>
       */
      public Builder mergeGraphSpace(SpaceOuterClass.GraphSpace value) {
        if (graphSpaceBuilder_ == null) {
          if (graphSpace_ != null) {
            graphSpace_ =
              SpaceOuterClass.GraphSpace.newBuilder(graphSpace_).mergeFrom(value).buildPartial();
          } else {
            graphSpace_ = value;
          }
          onChanged();
        } else {
          graphSpaceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.GraphSpace graph_space = 13;</code>
       */
      public Builder clearGraphSpace() {
        if (graphSpaceBuilder_ == null) {
          graphSpace_ = null;
          onChanged();
        } else {
          graphSpace_ = null;
          graphSpaceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.GraphSpace graph_space = 13;</code>
       */
      public SpaceOuterClass.GraphSpace.Builder getGraphSpaceBuilder() {
        
        onChanged();
        return getGraphSpaceFieldBuilder().getBuilder();
      }
      /**
       * <code>.GraphSpace graph_space = 13;</code>
       */
      public SpaceOuterClass.GraphSpaceOrBuilder getGraphSpaceOrBuilder() {
        if (graphSpaceBuilder_ != null) {
          return graphSpaceBuilder_.getMessageOrBuilder();
        } else {
          return graphSpace_ == null ?
              SpaceOuterClass.GraphSpace.getDefaultInstance() : graphSpace_;
        }
      }
      /**
       * <code>.GraphSpace graph_space = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.GraphSpace, SpaceOuterClass.GraphSpace.Builder, SpaceOuterClass.GraphSpaceOrBuilder> 
          getGraphSpaceFieldBuilder() {
        if (graphSpaceBuilder_ == null) {
          graphSpaceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SpaceOuterClass.GraphSpace, SpaceOuterClass.GraphSpace.Builder, SpaceOuterClass.GraphSpaceOrBuilder>(
                  getGraphSpace(),
                  getParentForChildren(),
                  isClean());
          graphSpace_ = null;
        }
        return graphSpaceBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Space)
    }

    // @@protoc_insertion_point(class_scope:Space)
    private static final SpaceOuterClass.Space DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SpaceOuterClass.Space();
    }

    public static SpaceOuterClass.Space getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Space>
        PARSER = new com.google.protobuf.AbstractParser<Space>() {
      @java.lang.Override
      public Space parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Space(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Space> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Space> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SpaceOuterClass.Space getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Data)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.SpaceType space_type = 1;</code>
     * @return The enum numeric value on the wire for spaceType.
     */
    int getSpaceTypeValue();
    /**
     * <code>.SpaceType space_type = 1;</code>
     * @return The spaceType.
     */
    SpaceOuterClass.SpaceType getSpaceType();

    /**
     * <code>string data_type = 2;</code>
     * @return The dataType.
     */
    java.lang.String getDataType();
    /**
     * <code>string data_type = 2;</code>
     * @return The bytes for dataType.
     */
    com.google.protobuf.ByteString
        getDataTypeBytes();

    /**
     * <code>bytes raw_data = 3;</code>
     * @return The rawData.
     */
    com.google.protobuf.ByteString getRawData();

    /**
     * <code>.Tensor box = 4;</code>
     * @return Whether the box field is set.
     */
    boolean hasBox();
    /**
     * <code>.Tensor box = 4;</code>
     * @return The box.
     */
    SpaceOuterClass.Tensor getBox();
    /**
     * <code>.Tensor box = 4;</code>
     */
    SpaceOuterClass.TensorOrBuilder getBoxOrBuilder();

    /**
     * <code>int32 discrete = 5;</code>
     * @return The discrete.
     */
    int getDiscrete();

    /**
     * <pre>
     * boolean type
     * </pre>
     *
     * <code>.Tensor multi_binary = 6;</code>
     * @return Whether the multiBinary field is set.
     */
    boolean hasMultiBinary();
    /**
     * <pre>
     * boolean type
     * </pre>
     *
     * <code>.Tensor multi_binary = 6;</code>
     * @return The multiBinary.
     */
    SpaceOuterClass.Tensor getMultiBinary();
    /**
     * <pre>
     * boolean type
     * </pre>
     *
     * <code>.Tensor multi_binary = 6;</code>
     */
    SpaceOuterClass.TensorOrBuilder getMultiBinaryOrBuilder();

    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor multi_discrete = 7;</code>
     * @return Whether the multiDiscrete field is set.
     */
    boolean hasMultiDiscrete();
    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor multi_discrete = 7;</code>
     * @return The multiDiscrete.
     */
    SpaceOuterClass.Tensor getMultiDiscrete();
    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor multi_discrete = 7;</code>
     */
    SpaceOuterClass.TensorOrBuilder getMultiDiscreteOrBuilder();

    /**
     * <code>string text = 8;</code>
     * @return The text.
     */
    java.lang.String getText();
    /**
     * <code>string text = 8;</code>
     * @return The bytes for text.
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>map&lt;string, .Data&gt; dict = 9;</code>
     */
    int getDictCount();
    /**
     * <code>map&lt;string, .Data&gt; dict = 9;</code>
     */
    boolean containsDict(
        java.lang.String key);
    /**
     * Use {@link #getDictMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, SpaceOuterClass.Data>
    getDict();
    /**
     * <code>map&lt;string, .Data&gt; dict = 9;</code>
     */
    java.util.Map<java.lang.String, SpaceOuterClass.Data>
    getDictMap();
    /**
     * <code>map&lt;string, .Data&gt; dict = 9;</code>
     */

    SpaceOuterClass.Data getDictOrDefault(
        java.lang.String key,
        SpaceOuterClass.Data defaultValue);
    /**
     * <code>map&lt;string, .Data&gt; dict = 9;</code>
     */

    SpaceOuterClass.Data getDictOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Data&gt; list = 10;</code>
     */
    int getListCount();
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Data&gt; list = 10;</code>
     */
    boolean containsList(
        int key);
    /**
     * Use {@link #getListMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, SpaceOuterClass.Data>
    getList();
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Data&gt; list = 10;</code>
     */
    java.util.Map<java.lang.Integer, SpaceOuterClass.Data>
    getListMap();
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Data&gt; list = 10;</code>
     */

    SpaceOuterClass.Data getListOrDefault(
        int key,
        SpaceOuterClass.Data defaultValue);
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Data&gt; list = 10;</code>
     */

    SpaceOuterClass.Data getListOrThrow(
        int key);

    /**
     * <code>.Graph graph = 11;</code>
     * @return Whether the graph field is set.
     */
    boolean hasGraph();
    /**
     * <code>.Graph graph = 11;</code>
     * @return The graph.
     */
    SpaceOuterClass.Graph getGraph();
    /**
     * <code>.Graph graph = 11;</code>
     */
    SpaceOuterClass.GraphOrBuilder getGraphOrBuilder();

    /**
     * <pre>
     * Box space instance which is a compressed image (H, W, C)
     * </pre>
     *
     * <code>.Image image = 12;</code>
     * @return Whether the image field is set.
     */
    boolean hasImage();
    /**
     * <pre>
     * Box space instance which is a compressed image (H, W, C)
     * </pre>
     *
     * <code>.Image image = 12;</code>
     * @return The image.
     */
    SpaceOuterClass.Image getImage();
    /**
     * <pre>
     * Box space instance which is a compressed image (H, W, C)
     * </pre>
     *
     * <code>.Image image = 12;</code>
     */
    SpaceOuterClass.ImageOrBuilder getImageOrBuilder();
  }
  /**
   * <pre>
   * Data is a point(instance) in(belongs to) the space
   * </pre>
   *
   * Protobuf type {@code Data}
   */
  public static final class Data extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Data)
      DataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Data.newBuilder() to construct.
    private Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Data() {
      spaceType_ = 0;
      dataType_ = "";
      rawData_ = com.google.protobuf.ByteString.EMPTY;
      text_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Data();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              spaceType_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              dataType_ = s;
              break;
            }
            case 26: {

              rawData_ = input.readBytes();
              break;
            }
            case 34: {
              SpaceOuterClass.Tensor.Builder subBuilder = null;
              if (box_ != null) {
                subBuilder = box_.toBuilder();
              }
              box_ = input.readMessage(SpaceOuterClass.Tensor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(box_);
                box_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              discrete_ = input.readInt32();
              break;
            }
            case 50: {
              SpaceOuterClass.Tensor.Builder subBuilder = null;
              if (multiBinary_ != null) {
                subBuilder = multiBinary_.toBuilder();
              }
              multiBinary_ = input.readMessage(SpaceOuterClass.Tensor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(multiBinary_);
                multiBinary_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              SpaceOuterClass.Tensor.Builder subBuilder = null;
              if (multiDiscrete_ != null) {
                subBuilder = multiDiscrete_.toBuilder();
              }
              multiDiscrete_ = input.readMessage(SpaceOuterClass.Tensor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(multiDiscrete_);
                multiDiscrete_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              text_ = s;
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dict_ = com.google.protobuf.MapField.newMapField(
                    DictDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, SpaceOuterClass.Data>
              dict__ = input.readMessage(
                  DictDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              dict_.getMutableMap().put(
                  dict__.getKey(), dict__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                list_ = com.google.protobuf.MapField.newMapField(
                    ListDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, SpaceOuterClass.Data>
              list__ = input.readMessage(
                  ListDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              list_.getMutableMap().put(
                  list__.getKey(), list__.getValue());
              break;
            }
            case 90: {
              SpaceOuterClass.Graph.Builder subBuilder = null;
              if (graph_ != null) {
                subBuilder = graph_.toBuilder();
              }
              graph_ = input.readMessage(SpaceOuterClass.Graph.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(graph_);
                graph_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              SpaceOuterClass.Image.Builder subBuilder = null;
              if (image_ != null) {
                subBuilder = image_.toBuilder();
              }
              image_ = input.readMessage(SpaceOuterClass.Image.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(image_);
                image_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SpaceOuterClass.internal_static_Data_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 9:
          return internalGetDict();
        case 10:
          return internalGetList();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SpaceOuterClass.internal_static_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SpaceOuterClass.Data.class, SpaceOuterClass.Data.Builder.class);
    }

    public static final int SPACE_TYPE_FIELD_NUMBER = 1;
    private int spaceType_;
    /**
     * <code>.SpaceType space_type = 1;</code>
     * @return The enum numeric value on the wire for spaceType.
     */
    @java.lang.Override public int getSpaceTypeValue() {
      return spaceType_;
    }
    /**
     * <code>.SpaceType space_type = 1;</code>
     * @return The spaceType.
     */
    @java.lang.Override public SpaceOuterClass.SpaceType getSpaceType() {
      @SuppressWarnings("deprecation")
      SpaceOuterClass.SpaceType result = SpaceOuterClass.SpaceType.valueOf(spaceType_);
      return result == null ? SpaceOuterClass.SpaceType.UNRECOGNIZED : result;
    }

    public static final int DATA_TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object dataType_;
    /**
     * <code>string data_type = 2;</code>
     * @return The dataType.
     */
    @java.lang.Override
    public java.lang.String getDataType() {
      java.lang.Object ref = dataType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataType_ = s;
        return s;
      }
    }
    /**
     * <code>string data_type = 2;</code>
     * @return The bytes for dataType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDataTypeBytes() {
      java.lang.Object ref = dataType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RAW_DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString rawData_;
    /**
     * <code>bytes raw_data = 3;</code>
     * @return The rawData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRawData() {
      return rawData_;
    }

    public static final int BOX_FIELD_NUMBER = 4;
    private SpaceOuterClass.Tensor box_;
    /**
     * <code>.Tensor box = 4;</code>
     * @return Whether the box field is set.
     */
    @java.lang.Override
    public boolean hasBox() {
      return box_ != null;
    }
    /**
     * <code>.Tensor box = 4;</code>
     * @return The box.
     */
    @java.lang.Override
    public SpaceOuterClass.Tensor getBox() {
      return box_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : box_;
    }
    /**
     * <code>.Tensor box = 4;</code>
     */
    @java.lang.Override
    public SpaceOuterClass.TensorOrBuilder getBoxOrBuilder() {
      return getBox();
    }

    public static final int DISCRETE_FIELD_NUMBER = 5;
    private int discrete_;
    /**
     * <code>int32 discrete = 5;</code>
     * @return The discrete.
     */
    @java.lang.Override
    public int getDiscrete() {
      return discrete_;
    }

    public static final int MULTI_BINARY_FIELD_NUMBER = 6;
    private SpaceOuterClass.Tensor multiBinary_;
    /**
     * <pre>
     * boolean type
     * </pre>
     *
     * <code>.Tensor multi_binary = 6;</code>
     * @return Whether the multiBinary field is set.
     */
    @java.lang.Override
    public boolean hasMultiBinary() {
      return multiBinary_ != null;
    }
    /**
     * <pre>
     * boolean type
     * </pre>
     *
     * <code>.Tensor multi_binary = 6;</code>
     * @return The multiBinary.
     */
    @java.lang.Override
    public SpaceOuterClass.Tensor getMultiBinary() {
      return multiBinary_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : multiBinary_;
    }
    /**
     * <pre>
     * boolean type
     * </pre>
     *
     * <code>.Tensor multi_binary = 6;</code>
     */
    @java.lang.Override
    public SpaceOuterClass.TensorOrBuilder getMultiBinaryOrBuilder() {
      return getMultiBinary();
    }

    public static final int MULTI_DISCRETE_FIELD_NUMBER = 7;
    private SpaceOuterClass.Tensor multiDiscrete_;
    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor multi_discrete = 7;</code>
     * @return Whether the multiDiscrete field is set.
     */
    @java.lang.Override
    public boolean hasMultiDiscrete() {
      return multiDiscrete_ != null;
    }
    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor multi_discrete = 7;</code>
     * @return The multiDiscrete.
     */
    @java.lang.Override
    public SpaceOuterClass.Tensor getMultiDiscrete() {
      return multiDiscrete_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : multiDiscrete_;
    }
    /**
     * <pre>
     * integer type
     * </pre>
     *
     * <code>.Tensor multi_discrete = 7;</code>
     */
    @java.lang.Override
    public SpaceOuterClass.TensorOrBuilder getMultiDiscreteOrBuilder() {
      return getMultiDiscrete();
    }

    public static final int TEXT_FIELD_NUMBER = 8;
    private volatile java.lang.Object text_;
    /**
     * <code>string text = 8;</code>
     * @return The text.
     */
    @java.lang.Override
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        text_ = s;
        return s;
      }
    }
    /**
     * <code>string text = 8;</code>
     * @return The bytes for text.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DICT_FIELD_NUMBER = 9;
    private static final class DictDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, SpaceOuterClass.Data> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, SpaceOuterClass.Data>newDefaultInstance(
                  SpaceOuterClass.internal_static_Data_DictEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  SpaceOuterClass.Data.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, SpaceOuterClass.Data> dict_;
    private com.google.protobuf.MapField<java.lang.String, SpaceOuterClass.Data>
    internalGetDict() {
      if (dict_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DictDefaultEntryHolder.defaultEntry);
      }
      return dict_;
    }

    public int getDictCount() {
      return internalGetDict().getMap().size();
    }
    /**
     * <code>map&lt;string, .Data&gt; dict = 9;</code>
     */

    @java.lang.Override
    public boolean containsDict(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetDict().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDictMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, SpaceOuterClass.Data> getDict() {
      return getDictMap();
    }
    /**
     * <code>map&lt;string, .Data&gt; dict = 9;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, SpaceOuterClass.Data> getDictMap() {
      return internalGetDict().getMap();
    }
    /**
     * <code>map&lt;string, .Data&gt; dict = 9;</code>
     */
    @java.lang.Override

    public SpaceOuterClass.Data getDictOrDefault(
        java.lang.String key,
        SpaceOuterClass.Data defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, SpaceOuterClass.Data> map =
          internalGetDict().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .Data&gt; dict = 9;</code>
     */
    @java.lang.Override

    public SpaceOuterClass.Data getDictOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, SpaceOuterClass.Data> map =
          internalGetDict().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LIST_FIELD_NUMBER = 10;
    private static final class ListDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, SpaceOuterClass.Data> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, SpaceOuterClass.Data>newDefaultInstance(
                  SpaceOuterClass.internal_static_Data_ListEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  SpaceOuterClass.Data.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, SpaceOuterClass.Data> list_;
    private com.google.protobuf.MapField<java.lang.Integer, SpaceOuterClass.Data>
    internalGetList() {
      if (list_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ListDefaultEntryHolder.defaultEntry);
      }
      return list_;
    }

    public int getListCount() {
      return internalGetList().getMap().size();
    }
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Data&gt; list = 10;</code>
     */

    @java.lang.Override
    public boolean containsList(
        int key) {
      
      return internalGetList().getMap().containsKey(key);
    }
    /**
     * Use {@link #getListMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, SpaceOuterClass.Data> getList() {
      return getListMap();
    }
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Data&gt; list = 10;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, SpaceOuterClass.Data> getListMap() {
      return internalGetList().getMap();
    }
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Data&gt; list = 10;</code>
     */
    @java.lang.Override

    public SpaceOuterClass.Data getListOrDefault(
        int key,
        SpaceOuterClass.Data defaultValue) {
      
      java.util.Map<java.lang.Integer, SpaceOuterClass.Data> map =
          internalGetList().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Tuple and Sequence
     * </pre>
     *
     * <code>map&lt;int32, .Data&gt; list = 10;</code>
     */
    @java.lang.Override

    public SpaceOuterClass.Data getListOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, SpaceOuterClass.Data> map =
          internalGetList().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int GRAPH_FIELD_NUMBER = 11;
    private SpaceOuterClass.Graph graph_;
    /**
     * <code>.Graph graph = 11;</code>
     * @return Whether the graph field is set.
     */
    @java.lang.Override
    public boolean hasGraph() {
      return graph_ != null;
    }
    /**
     * <code>.Graph graph = 11;</code>
     * @return The graph.
     */
    @java.lang.Override
    public SpaceOuterClass.Graph getGraph() {
      return graph_ == null ? SpaceOuterClass.Graph.getDefaultInstance() : graph_;
    }
    /**
     * <code>.Graph graph = 11;</code>
     */
    @java.lang.Override
    public SpaceOuterClass.GraphOrBuilder getGraphOrBuilder() {
      return getGraph();
    }

    public static final int IMAGE_FIELD_NUMBER = 12;
    private SpaceOuterClass.Image image_;
    /**
     * <pre>
     * Box space instance which is a compressed image (H, W, C)
     * </pre>
     *
     * <code>.Image image = 12;</code>
     * @return Whether the image field is set.
     */
    @java.lang.Override
    public boolean hasImage() {
      return image_ != null;
    }
    /**
     * <pre>
     * Box space instance which is a compressed image (H, W, C)
     * </pre>
     *
     * <code>.Image image = 12;</code>
     * @return The image.
     */
    @java.lang.Override
    public SpaceOuterClass.Image getImage() {
      return image_ == null ? SpaceOuterClass.Image.getDefaultInstance() : image_;
    }
    /**
     * <pre>
     * Box space instance which is a compressed image (H, W, C)
     * </pre>
     *
     * <code>.Image image = 12;</code>
     */
    @java.lang.Override
    public SpaceOuterClass.ImageOrBuilder getImageOrBuilder() {
      return getImage();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (spaceType_ != SpaceOuterClass.SpaceType.SPACE_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, spaceType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataType_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, dataType_);
      }
      if (!rawData_.isEmpty()) {
        output.writeBytes(3, rawData_);
      }
      if (box_ != null) {
        output.writeMessage(4, getBox());
      }
      if (discrete_ != 0) {
        output.writeInt32(5, discrete_);
      }
      if (multiBinary_ != null) {
        output.writeMessage(6, getMultiBinary());
      }
      if (multiDiscrete_ != null) {
        output.writeMessage(7, getMultiDiscrete());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, text_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetDict(),
          DictDefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetList(),
          ListDefaultEntryHolder.defaultEntry,
          10);
      if (graph_ != null) {
        output.writeMessage(11, getGraph());
      }
      if (image_ != null) {
        output.writeMessage(12, getImage());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (spaceType_ != SpaceOuterClass.SpaceType.SPACE_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, spaceType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataType_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, dataType_);
      }
      if (!rawData_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, rawData_);
      }
      if (box_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBox());
      }
      if (discrete_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, discrete_);
      }
      if (multiBinary_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMultiBinary());
      }
      if (multiDiscrete_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getMultiDiscrete());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, text_);
      }
      for (java.util.Map.Entry<java.lang.String, SpaceOuterClass.Data> entry
           : internalGetDict().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, SpaceOuterClass.Data>
        dict__ = DictDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, dict__);
      }
      for (java.util.Map.Entry<java.lang.Integer, SpaceOuterClass.Data> entry
           : internalGetList().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, SpaceOuterClass.Data>
        list__ = ListDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, list__);
      }
      if (graph_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getGraph());
      }
      if (image_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getImage());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SpaceOuterClass.Data)) {
        return super.equals(obj);
      }
      SpaceOuterClass.Data other = (SpaceOuterClass.Data) obj;

      if (spaceType_ != other.spaceType_) return false;
      if (!getDataType()
          .equals(other.getDataType())) return false;
      if (!getRawData()
          .equals(other.getRawData())) return false;
      if (hasBox() != other.hasBox()) return false;
      if (hasBox()) {
        if (!getBox()
            .equals(other.getBox())) return false;
      }
      if (getDiscrete()
          != other.getDiscrete()) return false;
      if (hasMultiBinary() != other.hasMultiBinary()) return false;
      if (hasMultiBinary()) {
        if (!getMultiBinary()
            .equals(other.getMultiBinary())) return false;
      }
      if (hasMultiDiscrete() != other.hasMultiDiscrete()) return false;
      if (hasMultiDiscrete()) {
        if (!getMultiDiscrete()
            .equals(other.getMultiDiscrete())) return false;
      }
      if (!getText()
          .equals(other.getText())) return false;
      if (!internalGetDict().equals(
          other.internalGetDict())) return false;
      if (!internalGetList().equals(
          other.internalGetList())) return false;
      if (hasGraph() != other.hasGraph()) return false;
      if (hasGraph()) {
        if (!getGraph()
            .equals(other.getGraph())) return false;
      }
      if (hasImage() != other.hasImage()) return false;
      if (hasImage()) {
        if (!getImage()
            .equals(other.getImage())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SPACE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + spaceType_;
      hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDataType().hashCode();
      hash = (37 * hash) + RAW_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getRawData().hashCode();
      if (hasBox()) {
        hash = (37 * hash) + BOX_FIELD_NUMBER;
        hash = (53 * hash) + getBox().hashCode();
      }
      hash = (37 * hash) + DISCRETE_FIELD_NUMBER;
      hash = (53 * hash) + getDiscrete();
      if (hasMultiBinary()) {
        hash = (37 * hash) + MULTI_BINARY_FIELD_NUMBER;
        hash = (53 * hash) + getMultiBinary().hashCode();
      }
      if (hasMultiDiscrete()) {
        hash = (37 * hash) + MULTI_DISCRETE_FIELD_NUMBER;
        hash = (53 * hash) + getMultiDiscrete().hashCode();
      }
      hash = (37 * hash) + TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getText().hashCode();
      if (!internalGetDict().getMap().isEmpty()) {
        hash = (37 * hash) + DICT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDict().hashCode();
      }
      if (!internalGetList().getMap().isEmpty()) {
        hash = (37 * hash) + LIST_FIELD_NUMBER;
        hash = (53 * hash) + internalGetList().hashCode();
      }
      if (hasGraph()) {
        hash = (37 * hash) + GRAPH_FIELD_NUMBER;
        hash = (53 * hash) + getGraph().hashCode();
      }
      if (hasImage()) {
        hash = (37 * hash) + IMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getImage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SpaceOuterClass.Data parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Data parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SpaceOuterClass.Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SpaceOuterClass.Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SpaceOuterClass.Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SpaceOuterClass.Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SpaceOuterClass.Data prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Data is a point(instance) in(belongs to) the space
     * </pre>
     *
     * Protobuf type {@code Data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Data)
        SpaceOuterClass.DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SpaceOuterClass.internal_static_Data_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 9:
            return internalGetDict();
          case 10:
            return internalGetList();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 9:
            return internalGetMutableDict();
          case 10:
            return internalGetMutableList();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SpaceOuterClass.internal_static_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SpaceOuterClass.Data.class, SpaceOuterClass.Data.Builder.class);
      }

      // Construct using SpaceOuterClass.Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        spaceType_ = 0;

        dataType_ = "";

        rawData_ = com.google.protobuf.ByteString.EMPTY;

        if (boxBuilder_ == null) {
          box_ = null;
        } else {
          box_ = null;
          boxBuilder_ = null;
        }
        discrete_ = 0;

        if (multiBinaryBuilder_ == null) {
          multiBinary_ = null;
        } else {
          multiBinary_ = null;
          multiBinaryBuilder_ = null;
        }
        if (multiDiscreteBuilder_ == null) {
          multiDiscrete_ = null;
        } else {
          multiDiscrete_ = null;
          multiDiscreteBuilder_ = null;
        }
        text_ = "";

        internalGetMutableDict().clear();
        internalGetMutableList().clear();
        if (graphBuilder_ == null) {
          graph_ = null;
        } else {
          graph_ = null;
          graphBuilder_ = null;
        }
        if (imageBuilder_ == null) {
          image_ = null;
        } else {
          image_ = null;
          imageBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SpaceOuterClass.internal_static_Data_descriptor;
      }

      @java.lang.Override
      public SpaceOuterClass.Data getDefaultInstanceForType() {
        return SpaceOuterClass.Data.getDefaultInstance();
      }

      @java.lang.Override
      public SpaceOuterClass.Data build() {
        SpaceOuterClass.Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SpaceOuterClass.Data buildPartial() {
        SpaceOuterClass.Data result = new SpaceOuterClass.Data(this);
        int from_bitField0_ = bitField0_;
        result.spaceType_ = spaceType_;
        result.dataType_ = dataType_;
        result.rawData_ = rawData_;
        if (boxBuilder_ == null) {
          result.box_ = box_;
        } else {
          result.box_ = boxBuilder_.build();
        }
        result.discrete_ = discrete_;
        if (multiBinaryBuilder_ == null) {
          result.multiBinary_ = multiBinary_;
        } else {
          result.multiBinary_ = multiBinaryBuilder_.build();
        }
        if (multiDiscreteBuilder_ == null) {
          result.multiDiscrete_ = multiDiscrete_;
        } else {
          result.multiDiscrete_ = multiDiscreteBuilder_.build();
        }
        result.text_ = text_;
        result.dict_ = internalGetDict();
        result.dict_.makeImmutable();
        result.list_ = internalGetList();
        result.list_.makeImmutable();
        if (graphBuilder_ == null) {
          result.graph_ = graph_;
        } else {
          result.graph_ = graphBuilder_.build();
        }
        if (imageBuilder_ == null) {
          result.image_ = image_;
        } else {
          result.image_ = imageBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SpaceOuterClass.Data) {
          return mergeFrom((SpaceOuterClass.Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SpaceOuterClass.Data other) {
        if (other == SpaceOuterClass.Data.getDefaultInstance()) return this;
        if (other.spaceType_ != 0) {
          setSpaceTypeValue(other.getSpaceTypeValue());
        }
        if (!other.getDataType().isEmpty()) {
          dataType_ = other.dataType_;
          onChanged();
        }
        if (other.getRawData() != com.google.protobuf.ByteString.EMPTY) {
          setRawData(other.getRawData());
        }
        if (other.hasBox()) {
          mergeBox(other.getBox());
        }
        if (other.getDiscrete() != 0) {
          setDiscrete(other.getDiscrete());
        }
        if (other.hasMultiBinary()) {
          mergeMultiBinary(other.getMultiBinary());
        }
        if (other.hasMultiDiscrete()) {
          mergeMultiDiscrete(other.getMultiDiscrete());
        }
        if (!other.getText().isEmpty()) {
          text_ = other.text_;
          onChanged();
        }
        internalGetMutableDict().mergeFrom(
            other.internalGetDict());
        internalGetMutableList().mergeFrom(
            other.internalGetList());
        if (other.hasGraph()) {
          mergeGraph(other.getGraph());
        }
        if (other.hasImage()) {
          mergeImage(other.getImage());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SpaceOuterClass.Data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SpaceOuterClass.Data) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int spaceType_ = 0;
      /**
       * <code>.SpaceType space_type = 1;</code>
       * @return The enum numeric value on the wire for spaceType.
       */
      @java.lang.Override public int getSpaceTypeValue() {
        return spaceType_;
      }
      /**
       * <code>.SpaceType space_type = 1;</code>
       * @param value The enum numeric value on the wire for spaceType to set.
       * @return This builder for chaining.
       */
      public Builder setSpaceTypeValue(int value) {
        
        spaceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.SpaceType space_type = 1;</code>
       * @return The spaceType.
       */
      @java.lang.Override
      public SpaceOuterClass.SpaceType getSpaceType() {
        @SuppressWarnings("deprecation")
        SpaceOuterClass.SpaceType result = SpaceOuterClass.SpaceType.valueOf(spaceType_);
        return result == null ? SpaceOuterClass.SpaceType.UNRECOGNIZED : result;
      }
      /**
       * <code>.SpaceType space_type = 1;</code>
       * @param value The spaceType to set.
       * @return This builder for chaining.
       */
      public Builder setSpaceType(SpaceOuterClass.SpaceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        spaceType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.SpaceType space_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpaceType() {
        
        spaceType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object dataType_ = "";
      /**
       * <code>string data_type = 2;</code>
       * @return The dataType.
       */
      public java.lang.String getDataType() {
        java.lang.Object ref = dataType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dataType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string data_type = 2;</code>
       * @return The bytes for dataType.
       */
      public com.google.protobuf.ByteString
          getDataTypeBytes() {
        java.lang.Object ref = dataType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string data_type = 2;</code>
       * @param value The dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string data_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataType() {
        
        dataType_ = getDefaultInstance().getDataType();
        onChanged();
        return this;
      }
      /**
       * <code>string data_type = 2;</code>
       * @param value The bytes for dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dataType_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString rawData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes raw_data = 3;</code>
       * @return The rawData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRawData() {
        return rawData_;
      }
      /**
       * <code>bytes raw_data = 3;</code>
       * @param value The rawData to set.
       * @return This builder for chaining.
       */
      public Builder setRawData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rawData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes raw_data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawData() {
        
        rawData_ = getDefaultInstance().getRawData();
        onChanged();
        return this;
      }

      private SpaceOuterClass.Tensor box_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> boxBuilder_;
      /**
       * <code>.Tensor box = 4;</code>
       * @return Whether the box field is set.
       */
      public boolean hasBox() {
        return boxBuilder_ != null || box_ != null;
      }
      /**
       * <code>.Tensor box = 4;</code>
       * @return The box.
       */
      public SpaceOuterClass.Tensor getBox() {
        if (boxBuilder_ == null) {
          return box_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : box_;
        } else {
          return boxBuilder_.getMessage();
        }
      }
      /**
       * <code>.Tensor box = 4;</code>
       */
      public Builder setBox(SpaceOuterClass.Tensor value) {
        if (boxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          box_ = value;
          onChanged();
        } else {
          boxBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Tensor box = 4;</code>
       */
      public Builder setBox(
          SpaceOuterClass.Tensor.Builder builderForValue) {
        if (boxBuilder_ == null) {
          box_ = builderForValue.build();
          onChanged();
        } else {
          boxBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Tensor box = 4;</code>
       */
      public Builder mergeBox(SpaceOuterClass.Tensor value) {
        if (boxBuilder_ == null) {
          if (box_ != null) {
            box_ =
              SpaceOuterClass.Tensor.newBuilder(box_).mergeFrom(value).buildPartial();
          } else {
            box_ = value;
          }
          onChanged();
        } else {
          boxBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Tensor box = 4;</code>
       */
      public Builder clearBox() {
        if (boxBuilder_ == null) {
          box_ = null;
          onChanged();
        } else {
          box_ = null;
          boxBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Tensor box = 4;</code>
       */
      public SpaceOuterClass.Tensor.Builder getBoxBuilder() {
        
        onChanged();
        return getBoxFieldBuilder().getBuilder();
      }
      /**
       * <code>.Tensor box = 4;</code>
       */
      public SpaceOuterClass.TensorOrBuilder getBoxOrBuilder() {
        if (boxBuilder_ != null) {
          return boxBuilder_.getMessageOrBuilder();
        } else {
          return box_ == null ?
              SpaceOuterClass.Tensor.getDefaultInstance() : box_;
        }
      }
      /**
       * <code>.Tensor box = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> 
          getBoxFieldBuilder() {
        if (boxBuilder_ == null) {
          boxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder>(
                  getBox(),
                  getParentForChildren(),
                  isClean());
          box_ = null;
        }
        return boxBuilder_;
      }

      private int discrete_ ;
      /**
       * <code>int32 discrete = 5;</code>
       * @return The discrete.
       */
      @java.lang.Override
      public int getDiscrete() {
        return discrete_;
      }
      /**
       * <code>int32 discrete = 5;</code>
       * @param value The discrete to set.
       * @return This builder for chaining.
       */
      public Builder setDiscrete(int value) {
        
        discrete_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 discrete = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDiscrete() {
        
        discrete_ = 0;
        onChanged();
        return this;
      }

      private SpaceOuterClass.Tensor multiBinary_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> multiBinaryBuilder_;
      /**
       * <pre>
       * boolean type
       * </pre>
       *
       * <code>.Tensor multi_binary = 6;</code>
       * @return Whether the multiBinary field is set.
       */
      public boolean hasMultiBinary() {
        return multiBinaryBuilder_ != null || multiBinary_ != null;
      }
      /**
       * <pre>
       * boolean type
       * </pre>
       *
       * <code>.Tensor multi_binary = 6;</code>
       * @return The multiBinary.
       */
      public SpaceOuterClass.Tensor getMultiBinary() {
        if (multiBinaryBuilder_ == null) {
          return multiBinary_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : multiBinary_;
        } else {
          return multiBinaryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * boolean type
       * </pre>
       *
       * <code>.Tensor multi_binary = 6;</code>
       */
      public Builder setMultiBinary(SpaceOuterClass.Tensor value) {
        if (multiBinaryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          multiBinary_ = value;
          onChanged();
        } else {
          multiBinaryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * boolean type
       * </pre>
       *
       * <code>.Tensor multi_binary = 6;</code>
       */
      public Builder setMultiBinary(
          SpaceOuterClass.Tensor.Builder builderForValue) {
        if (multiBinaryBuilder_ == null) {
          multiBinary_ = builderForValue.build();
          onChanged();
        } else {
          multiBinaryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * boolean type
       * </pre>
       *
       * <code>.Tensor multi_binary = 6;</code>
       */
      public Builder mergeMultiBinary(SpaceOuterClass.Tensor value) {
        if (multiBinaryBuilder_ == null) {
          if (multiBinary_ != null) {
            multiBinary_ =
              SpaceOuterClass.Tensor.newBuilder(multiBinary_).mergeFrom(value).buildPartial();
          } else {
            multiBinary_ = value;
          }
          onChanged();
        } else {
          multiBinaryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * boolean type
       * </pre>
       *
       * <code>.Tensor multi_binary = 6;</code>
       */
      public Builder clearMultiBinary() {
        if (multiBinaryBuilder_ == null) {
          multiBinary_ = null;
          onChanged();
        } else {
          multiBinary_ = null;
          multiBinaryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * boolean type
       * </pre>
       *
       * <code>.Tensor multi_binary = 6;</code>
       */
      public SpaceOuterClass.Tensor.Builder getMultiBinaryBuilder() {
        
        onChanged();
        return getMultiBinaryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * boolean type
       * </pre>
       *
       * <code>.Tensor multi_binary = 6;</code>
       */
      public SpaceOuterClass.TensorOrBuilder getMultiBinaryOrBuilder() {
        if (multiBinaryBuilder_ != null) {
          return multiBinaryBuilder_.getMessageOrBuilder();
        } else {
          return multiBinary_ == null ?
              SpaceOuterClass.Tensor.getDefaultInstance() : multiBinary_;
        }
      }
      /**
       * <pre>
       * boolean type
       * </pre>
       *
       * <code>.Tensor multi_binary = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> 
          getMultiBinaryFieldBuilder() {
        if (multiBinaryBuilder_ == null) {
          multiBinaryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder>(
                  getMultiBinary(),
                  getParentForChildren(),
                  isClean());
          multiBinary_ = null;
        }
        return multiBinaryBuilder_;
      }

      private SpaceOuterClass.Tensor multiDiscrete_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> multiDiscreteBuilder_;
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor multi_discrete = 7;</code>
       * @return Whether the multiDiscrete field is set.
       */
      public boolean hasMultiDiscrete() {
        return multiDiscreteBuilder_ != null || multiDiscrete_ != null;
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor multi_discrete = 7;</code>
       * @return The multiDiscrete.
       */
      public SpaceOuterClass.Tensor getMultiDiscrete() {
        if (multiDiscreteBuilder_ == null) {
          return multiDiscrete_ == null ? SpaceOuterClass.Tensor.getDefaultInstance() : multiDiscrete_;
        } else {
          return multiDiscreteBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor multi_discrete = 7;</code>
       */
      public Builder setMultiDiscrete(SpaceOuterClass.Tensor value) {
        if (multiDiscreteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          multiDiscrete_ = value;
          onChanged();
        } else {
          multiDiscreteBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor multi_discrete = 7;</code>
       */
      public Builder setMultiDiscrete(
          SpaceOuterClass.Tensor.Builder builderForValue) {
        if (multiDiscreteBuilder_ == null) {
          multiDiscrete_ = builderForValue.build();
          onChanged();
        } else {
          multiDiscreteBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor multi_discrete = 7;</code>
       */
      public Builder mergeMultiDiscrete(SpaceOuterClass.Tensor value) {
        if (multiDiscreteBuilder_ == null) {
          if (multiDiscrete_ != null) {
            multiDiscrete_ =
              SpaceOuterClass.Tensor.newBuilder(multiDiscrete_).mergeFrom(value).buildPartial();
          } else {
            multiDiscrete_ = value;
          }
          onChanged();
        } else {
          multiDiscreteBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor multi_discrete = 7;</code>
       */
      public Builder clearMultiDiscrete() {
        if (multiDiscreteBuilder_ == null) {
          multiDiscrete_ = null;
          onChanged();
        } else {
          multiDiscrete_ = null;
          multiDiscreteBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor multi_discrete = 7;</code>
       */
      public SpaceOuterClass.Tensor.Builder getMultiDiscreteBuilder() {
        
        onChanged();
        return getMultiDiscreteFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor multi_discrete = 7;</code>
       */
      public SpaceOuterClass.TensorOrBuilder getMultiDiscreteOrBuilder() {
        if (multiDiscreteBuilder_ != null) {
          return multiDiscreteBuilder_.getMessageOrBuilder();
        } else {
          return multiDiscrete_ == null ?
              SpaceOuterClass.Tensor.getDefaultInstance() : multiDiscrete_;
        }
      }
      /**
       * <pre>
       * integer type
       * </pre>
       *
       * <code>.Tensor multi_discrete = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder> 
          getMultiDiscreteFieldBuilder() {
        if (multiDiscreteBuilder_ == null) {
          multiDiscreteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SpaceOuterClass.Tensor, SpaceOuterClass.Tensor.Builder, SpaceOuterClass.TensorOrBuilder>(
                  getMultiDiscrete(),
                  getParentForChildren(),
                  isClean());
          multiDiscrete_ = null;
        }
        return multiDiscreteBuilder_;
      }

      private java.lang.Object text_ = "";
      /**
       * <code>string text = 8;</code>
       * @return The text.
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          text_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string text = 8;</code>
       * @return The bytes for text.
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string text = 8;</code>
       * @param value The text to set.
       * @return This builder for chaining.
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string text = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearText() {
        
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>string text = 8;</code>
       * @param value The bytes for text to set.
       * @return This builder for chaining.
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        text_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, SpaceOuterClass.Data> dict_;
      private com.google.protobuf.MapField<java.lang.String, SpaceOuterClass.Data>
      internalGetDict() {
        if (dict_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DictDefaultEntryHolder.defaultEntry);
        }
        return dict_;
      }
      private com.google.protobuf.MapField<java.lang.String, SpaceOuterClass.Data>
      internalGetMutableDict() {
        onChanged();;
        if (dict_ == null) {
          dict_ = com.google.protobuf.MapField.newMapField(
              DictDefaultEntryHolder.defaultEntry);
        }
        if (!dict_.isMutable()) {
          dict_ = dict_.copy();
        }
        return dict_;
      }

      public int getDictCount() {
        return internalGetDict().getMap().size();
      }
      /**
       * <code>map&lt;string, .Data&gt; dict = 9;</code>
       */

      @java.lang.Override
      public boolean containsDict(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetDict().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDictMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, SpaceOuterClass.Data> getDict() {
        return getDictMap();
      }
      /**
       * <code>map&lt;string, .Data&gt; dict = 9;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, SpaceOuterClass.Data> getDictMap() {
        return internalGetDict().getMap();
      }
      /**
       * <code>map&lt;string, .Data&gt; dict = 9;</code>
       */
      @java.lang.Override

      public SpaceOuterClass.Data getDictOrDefault(
          java.lang.String key,
          SpaceOuterClass.Data defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, SpaceOuterClass.Data> map =
            internalGetDict().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .Data&gt; dict = 9;</code>
       */
      @java.lang.Override

      public SpaceOuterClass.Data getDictOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, SpaceOuterClass.Data> map =
            internalGetDict().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearDict() {
        internalGetMutableDict().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .Data&gt; dict = 9;</code>
       */

      public Builder removeDict(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableDict().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, SpaceOuterClass.Data>
      getMutableDict() {
        return internalGetMutableDict().getMutableMap();
      }
      /**
       * <code>map&lt;string, .Data&gt; dict = 9;</code>
       */
      public Builder putDict(
          java.lang.String key,
          SpaceOuterClass.Data value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableDict().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .Data&gt; dict = 9;</code>
       */

      public Builder putAllDict(
          java.util.Map<java.lang.String, SpaceOuterClass.Data> values) {
        internalGetMutableDict().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, SpaceOuterClass.Data> list_;
      private com.google.protobuf.MapField<java.lang.Integer, SpaceOuterClass.Data>
      internalGetList() {
        if (list_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ListDefaultEntryHolder.defaultEntry);
        }
        return list_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, SpaceOuterClass.Data>
      internalGetMutableList() {
        onChanged();;
        if (list_ == null) {
          list_ = com.google.protobuf.MapField.newMapField(
              ListDefaultEntryHolder.defaultEntry);
        }
        if (!list_.isMutable()) {
          list_ = list_.copy();
        }
        return list_;
      }

      public int getListCount() {
        return internalGetList().getMap().size();
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Data&gt; list = 10;</code>
       */

      @java.lang.Override
      public boolean containsList(
          int key) {
        
        return internalGetList().getMap().containsKey(key);
      }
      /**
       * Use {@link #getListMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, SpaceOuterClass.Data> getList() {
        return getListMap();
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Data&gt; list = 10;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, SpaceOuterClass.Data> getListMap() {
        return internalGetList().getMap();
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Data&gt; list = 10;</code>
       */
      @java.lang.Override

      public SpaceOuterClass.Data getListOrDefault(
          int key,
          SpaceOuterClass.Data defaultValue) {
        
        java.util.Map<java.lang.Integer, SpaceOuterClass.Data> map =
            internalGetList().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Data&gt; list = 10;</code>
       */
      @java.lang.Override

      public SpaceOuterClass.Data getListOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, SpaceOuterClass.Data> map =
            internalGetList().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearList() {
        internalGetMutableList().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Data&gt; list = 10;</code>
       */

      public Builder removeList(
          int key) {
        
        internalGetMutableList().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, SpaceOuterClass.Data>
      getMutableList() {
        return internalGetMutableList().getMutableMap();
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Data&gt; list = 10;</code>
       */
      public Builder putList(
          int key,
          SpaceOuterClass.Data value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableList().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Tuple and Sequence
       * </pre>
       *
       * <code>map&lt;int32, .Data&gt; list = 10;</code>
       */

      public Builder putAllList(
          java.util.Map<java.lang.Integer, SpaceOuterClass.Data> values) {
        internalGetMutableList().getMutableMap()
            .putAll(values);
        return this;
      }

      private SpaceOuterClass.Graph graph_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Graph, SpaceOuterClass.Graph.Builder, SpaceOuterClass.GraphOrBuilder> graphBuilder_;
      /**
       * <code>.Graph graph = 11;</code>
       * @return Whether the graph field is set.
       */
      public boolean hasGraph() {
        return graphBuilder_ != null || graph_ != null;
      }
      /**
       * <code>.Graph graph = 11;</code>
       * @return The graph.
       */
      public SpaceOuterClass.Graph getGraph() {
        if (graphBuilder_ == null) {
          return graph_ == null ? SpaceOuterClass.Graph.getDefaultInstance() : graph_;
        } else {
          return graphBuilder_.getMessage();
        }
      }
      /**
       * <code>.Graph graph = 11;</code>
       */
      public Builder setGraph(SpaceOuterClass.Graph value) {
        if (graphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          graph_ = value;
          onChanged();
        } else {
          graphBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Graph graph = 11;</code>
       */
      public Builder setGraph(
          SpaceOuterClass.Graph.Builder builderForValue) {
        if (graphBuilder_ == null) {
          graph_ = builderForValue.build();
          onChanged();
        } else {
          graphBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Graph graph = 11;</code>
       */
      public Builder mergeGraph(SpaceOuterClass.Graph value) {
        if (graphBuilder_ == null) {
          if (graph_ != null) {
            graph_ =
              SpaceOuterClass.Graph.newBuilder(graph_).mergeFrom(value).buildPartial();
          } else {
            graph_ = value;
          }
          onChanged();
        } else {
          graphBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Graph graph = 11;</code>
       */
      public Builder clearGraph() {
        if (graphBuilder_ == null) {
          graph_ = null;
          onChanged();
        } else {
          graph_ = null;
          graphBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Graph graph = 11;</code>
       */
      public SpaceOuterClass.Graph.Builder getGraphBuilder() {
        
        onChanged();
        return getGraphFieldBuilder().getBuilder();
      }
      /**
       * <code>.Graph graph = 11;</code>
       */
      public SpaceOuterClass.GraphOrBuilder getGraphOrBuilder() {
        if (graphBuilder_ != null) {
          return graphBuilder_.getMessageOrBuilder();
        } else {
          return graph_ == null ?
              SpaceOuterClass.Graph.getDefaultInstance() : graph_;
        }
      }
      /**
       * <code>.Graph graph = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Graph, SpaceOuterClass.Graph.Builder, SpaceOuterClass.GraphOrBuilder> 
          getGraphFieldBuilder() {
        if (graphBuilder_ == null) {
          graphBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SpaceOuterClass.Graph, SpaceOuterClass.Graph.Builder, SpaceOuterClass.GraphOrBuilder>(
                  getGraph(),
                  getParentForChildren(),
                  isClean());
          graph_ = null;
        }
        return graphBuilder_;
      }

      private SpaceOuterClass.Image image_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Image, SpaceOuterClass.Image.Builder, SpaceOuterClass.ImageOrBuilder> imageBuilder_;
      /**
       * <pre>
       * Box space instance which is a compressed image (H, W, C)
       * </pre>
       *
       * <code>.Image image = 12;</code>
       * @return Whether the image field is set.
       */
      public boolean hasImage() {
        return imageBuilder_ != null || image_ != null;
      }
      /**
       * <pre>
       * Box space instance which is a compressed image (H, W, C)
       * </pre>
       *
       * <code>.Image image = 12;</code>
       * @return The image.
       */
      public SpaceOuterClass.Image getImage() {
        if (imageBuilder_ == null) {
          return image_ == null ? SpaceOuterClass.Image.getDefaultInstance() : image_;
        } else {
          return imageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Box space instance which is a compressed image (H, W, C)
       * </pre>
       *
       * <code>.Image image = 12;</code>
       */
      public Builder setImage(SpaceOuterClass.Image value) {
        if (imageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          image_ = value;
          onChanged();
        } else {
          imageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Box space instance which is a compressed image (H, W, C)
       * </pre>
       *
       * <code>.Image image = 12;</code>
       */
      public Builder setImage(
          SpaceOuterClass.Image.Builder builderForValue) {
        if (imageBuilder_ == null) {
          image_ = builderForValue.build();
          onChanged();
        } else {
          imageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Box space instance which is a compressed image (H, W, C)
       * </pre>
       *
       * <code>.Image image = 12;</code>
       */
      public Builder mergeImage(SpaceOuterClass.Image value) {
        if (imageBuilder_ == null) {
          if (image_ != null) {
            image_ =
              SpaceOuterClass.Image.newBuilder(image_).mergeFrom(value).buildPartial();
          } else {
            image_ = value;
          }
          onChanged();
        } else {
          imageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Box space instance which is a compressed image (H, W, C)
       * </pre>
       *
       * <code>.Image image = 12;</code>
       */
      public Builder clearImage() {
        if (imageBuilder_ == null) {
          image_ = null;
          onChanged();
        } else {
          image_ = null;
          imageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Box space instance which is a compressed image (H, W, C)
       * </pre>
       *
       * <code>.Image image = 12;</code>
       */
      public SpaceOuterClass.Image.Builder getImageBuilder() {
        
        onChanged();
        return getImageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Box space instance which is a compressed image (H, W, C)
       * </pre>
       *
       * <code>.Image image = 12;</code>
       */
      public SpaceOuterClass.ImageOrBuilder getImageOrBuilder() {
        if (imageBuilder_ != null) {
          return imageBuilder_.getMessageOrBuilder();
        } else {
          return image_ == null ?
              SpaceOuterClass.Image.getDefaultInstance() : image_;
        }
      }
      /**
       * <pre>
       * Box space instance which is a compressed image (H, W, C)
       * </pre>
       *
       * <code>.Image image = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SpaceOuterClass.Image, SpaceOuterClass.Image.Builder, SpaceOuterClass.ImageOrBuilder> 
          getImageFieldBuilder() {
        if (imageBuilder_ == null) {
          imageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SpaceOuterClass.Image, SpaceOuterClass.Image.Builder, SpaceOuterClass.ImageOrBuilder>(
                  getImage(),
                  getParentForChildren(),
                  isClean());
          image_ = null;
        }
        return imageBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Data)
    }

    // @@protoc_insertion_point(class_scope:Data)
    private static final SpaceOuterClass.Data DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SpaceOuterClass.Data();
    }

    public static SpaceOuterClass.Data getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Data>
        PARSER = new com.google.protobuf.AbstractParser<Data>() {
      @java.lang.Override
      public Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Data(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Data> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Data> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SpaceOuterClass.Data getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Tensor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Tensor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GraphSpace_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GraphSpace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Graph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Graph_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Image_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Image_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Space_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Space_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Space_DictSpaceEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Space_DictSpaceEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Space_ListSpaceEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Space_ListSpaceEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Data_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_DictEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Data_DictEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_ListEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Data_ListEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013space.proto\"\324\001\n\006Tensor\022\r\n\005shape\030\001 \003(\005\022" +
      "\034\n\tdata_type\030\002 \001(\0162\t.DataType\022\023\n\013float_a" +
      "rray\030\003 \003(\002\022\024\n\014double_array\030\004 \003(\001\022\021\n\tint_" +
      "array\030\005 \003(\021\022\022\n\nlong_array\030\006 \003(\022\022\032\n\022unsig" +
      "ned_int_array\030\007 \003(\r\022\033\n\023unsigned_long_arr" +
      "ay\030\010 \003(\004\022\022\n\nbool_array\030\t \003(\010\"D\n\nGraphSpa" +
      "ce\022\032\n\nnode_space\030\001 \001(\0132\006.Space\022\032\n\nedge_s" +
      "pace\030\002 \001(\0132\006.Space\"T\n\005Graph\022\026\n\005nodes\030\001 \001" +
      "(\0132\007.Tensor\022\026\n\005edges\030\002 \001(\0132\007.Tensor\022\033\n\ne" +
      "dge_links\030\003 \001(\0132\007.Tensor\"k\n\005Image\022*\n\020com" +
      "pression_type\030\001 \001(\0162\020.CompressionType\022\014\n" +
      "\004data\030\002 \001(\014\022\r\n\005shape\030\003 \003(\005\022\031\n\021dimension_" +
      "mapping\030\004 \003(\005\"\236\003\n\005Space\022\036\n\nspace_type\030\001 " +
      "\001(\0162\n.SpaceType\022\023\n\013description\030\002 \001(\t\022\r\n\005" +
      "shape\030\003 \003(\005\022\021\n\tdata_type\030\004 \001(\t\022\013\n\003low\030\005 " +
      "\003(\002\022\014\n\004high\030\006 \003(\002\022\013\n\003min\030\007 \001(\005\022\013\n\003max\030\010 " +
      "\001(\005\022\014\n\004nvec\030\t \003(\005\022\017\n\007charset\030\n \003(\t\022)\n\ndi" +
      "ct_space\030\013 \003(\0132\025.Space.DictSpaceEntry\022)\n" +
      "\nlist_space\030\014 \003(\0132\025.Space.ListSpaceEntry" +
      "\022 \n\013graph_space\030\r \001(\0132\013.GraphSpace\0328\n\016Di" +
      "ctSpaceEntry\022\013\n\003key\030\001 \001(\t\022\025\n\005value\030\002 \001(\013" +
      "2\006.Space:\0028\001\0328\n\016ListSpaceEntry\022\013\n\003key\030\001 " +
      "\001(\005\022\025\n\005value\030\002 \001(\0132\006.Space:\0028\001\"\225\003\n\004Data\022" +
      "\036\n\nspace_type\030\001 \001(\0162\n.SpaceType\022\021\n\tdata_" +
      "type\030\002 \001(\t\022\020\n\010raw_data\030\003 \001(\014\022\024\n\003box\030\004 \001(" +
      "\0132\007.Tensor\022\020\n\010discrete\030\005 \001(\005\022\035\n\014multi_bi" +
      "nary\030\006 \001(\0132\007.Tensor\022\037\n\016multi_discrete\030\007 " +
      "\001(\0132\007.Tensor\022\014\n\004text\030\010 \001(\t\022\035\n\004dict\030\t \003(\013" +
      "2\017.Data.DictEntry\022\035\n\004list\030\n \003(\0132\017.Data.L" +
      "istEntry\022\025\n\005graph\030\013 \001(\0132\006.Graph\022\025\n\005image" +
      "\030\014 \001(\0132\006.Image\0322\n\tDictEntry\022\013\n\003key\030\001 \001(\t" +
      "\022\024\n\005value\030\002 \001(\0132\005.Data:\0028\001\0322\n\tListEntry\022" +
      "\013\n\003key\030\001 \001(\005\022\024\n\005value\030\002 \001(\0132\005.Data:\0028\001*\264" +
      "\001\n\010DataType\022\031\n\025DATA_TYPE_UNSPECIFIED\020\000\022\023" +
      "\n\017DATA_TYPE_FLOAT\020\001\022\024\n\020DATA_TYPE_DOUBLE\020" +
      "\002\022\021\n\rDATA_TYPE_INT\020\003\022\022\n\016DATA_TYPE_LONG\020\004" +
      "\022\022\n\016DATA_TYPE_UINT\020\005\022\023\n\017DATA_TYPE_ULONG\020" +
      "\006\022\022\n\016DATA_TYPE_BOOL\020\007*\202\001\n\017CompressionTyp" +
      "e\022 \n\034COMPRESSION_TYPE_UNSPECIFIED\020\000\022\031\n\025C" +
      "OMPRESSION_TYPE_NONE\020\001\022\030\n\024COMPRESSION_TY" +
      "PE_PNG\020\002\022\030\n\024COMPRESSION_TYPE_JPG\020\003*\251\002\n\tS" +
      "paceType\022\032\n\026SPACE_TYPE_UNSPECIFIED\020\000\022\022\n\016" +
      "SPACE_TYPE_RAW\020\001\022\022\n\016SPACE_TYPE_BOX\020\002\022\027\n\023" +
      "SPACE_TYPE_DISCRETE\020\003\022\033\n\027SPACE_TYPE_MULT" +
      "I_BINARY\020\004\022\035\n\031SPACE_TYPE_MULTI_DISCRETE\020" +
      "\005\022\023\n\017SPACE_TYPE_TEXT\020\006\022\023\n\017SPACE_TYPE_DIC" +
      "T\020\007\022\024\n\020SPACE_TYPE_TUPLE\020\010\022\027\n\023SPACE_TYPE_" +
      "SEQUENCE\020\t\022\024\n\020SPACE_TYPE_GRAPH\020\n\022\024\n\020SPAC" +
      "E_TYPE_IMAGE\020\013B\027\252\002\024PAIA.Marenv.Protobufb" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Tensor_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Tensor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Tensor_descriptor,
        new java.lang.String[] { "Shape", "DataType", "FloatArray", "DoubleArray", "IntArray", "LongArray", "UnsignedIntArray", "UnsignedLongArray", "BoolArray", });
    internal_static_GraphSpace_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_GraphSpace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GraphSpace_descriptor,
        new java.lang.String[] { "NodeSpace", "EdgeSpace", });
    internal_static_Graph_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Graph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Graph_descriptor,
        new java.lang.String[] { "Nodes", "Edges", "EdgeLinks", });
    internal_static_Image_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Image_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Image_descriptor,
        new java.lang.String[] { "CompressionType", "Data", "Shape", "DimensionMapping", });
    internal_static_Space_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Space_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Space_descriptor,
        new java.lang.String[] { "SpaceType", "Description", "Shape", "DataType", "Low", "High", "Min", "Max", "Nvec", "Charset", "DictSpace", "ListSpace", "GraphSpace", });
    internal_static_Space_DictSpaceEntry_descriptor =
      internal_static_Space_descriptor.getNestedTypes().get(0);
    internal_static_Space_DictSpaceEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Space_DictSpaceEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Space_ListSpaceEntry_descriptor =
      internal_static_Space_descriptor.getNestedTypes().get(1);
    internal_static_Space_ListSpaceEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Space_ListSpaceEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Data_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Data_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Data_descriptor,
        new java.lang.String[] { "SpaceType", "DataType", "RawData", "Box", "Discrete", "MultiBinary", "MultiDiscrete", "Text", "Dict", "List", "Graph", "Image", });
    internal_static_Data_DictEntry_descriptor =
      internal_static_Data_descriptor.getNestedTypes().get(0);
    internal_static_Data_DictEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Data_DictEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Data_ListEntry_descriptor =
      internal_static_Data_descriptor.getNestedTypes().get(1);
    internal_static_Data_ListEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Data_ListEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
