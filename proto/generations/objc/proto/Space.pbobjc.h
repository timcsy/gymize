// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: space.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BoolTensor;
@class Data;
@class FloatTensor;
@class Graph;
@class GraphSpace;
@class Image;
@class IntTensor;
@class Space;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum CompressionType

typedef GPB_ENUM(CompressionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CompressionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CompressionType_CompressionTypeUnspecified = 0,
  CompressionType_CompressionTypeNone = 1,
  CompressionType_CompressionTypePng = 2,
  CompressionType_CompressionTypeJpg = 3,
};

GPBEnumDescriptor *CompressionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CompressionType_IsValidValue(int32_t value);

#pragma mark - Enum SpaceType

typedef GPB_ENUM(SpaceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SpaceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SpaceType_SpaceTypeUnspecified = 0,
  SpaceType_SpaceTypeBox = 1,
  SpaceType_SpaceTypeDiscrete = 2,
  SpaceType_SpaceTypeMultiBinary = 3,
  SpaceType_SpaceTypeMultiDiscrete = 4,
  SpaceType_SpaceTypeText = 5,
  SpaceType_SpaceTypeDict = 6,
  SpaceType_SpaceTypeTuple = 7,
  SpaceType_SpaceTypeSequence = 8,
  SpaceType_SpaceTypeGraph = 9,
};

GPBEnumDescriptor *SpaceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SpaceType_IsValidValue(int32_t value);

#pragma mark - Enum DataType

typedef GPB_ENUM(DataType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DataType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DataType_DataTypeUnspecified = 0,
  DataType_DataTypeFloat = 1,
  DataType_DataTypeInt = 2,
  DataType_DataTypeBoolean = 3,
};

GPBEnumDescriptor *DataType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DataType_IsValidValue(int32_t value);

#pragma mark - SpaceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface SpaceRoot : GPBRootObject
@end

#pragma mark - FloatTensor

typedef GPB_ENUM(FloatTensor_FieldNumber) {
  FloatTensor_FieldNumber_ShapeArray = 1,
  FloatTensor_FieldNumber_ArrayArray = 2,
};

GPB_FINAL @interface FloatTensor : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *shapeArray;
/** The number of items in @c shapeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *arrayArray;
/** The number of items in @c arrayArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger arrayArray_Count;

@end

#pragma mark - IntTensor

typedef GPB_ENUM(IntTensor_FieldNumber) {
  IntTensor_FieldNumber_ShapeArray = 1,
  IntTensor_FieldNumber_ArrayArray = 2,
};

GPB_FINAL @interface IntTensor : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *shapeArray;
/** The number of items in @c shapeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *arrayArray;
/** The number of items in @c arrayArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger arrayArray_Count;

@end

#pragma mark - BoolTensor

typedef GPB_ENUM(BoolTensor_FieldNumber) {
  BoolTensor_FieldNumber_ShapeArray = 1,
  BoolTensor_FieldNumber_ArrayArray = 2,
};

GPB_FINAL @interface BoolTensor : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *shapeArray;
/** The number of items in @c shapeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolArray *arrayArray;
/** The number of items in @c arrayArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger arrayArray_Count;

@end

#pragma mark - GraphSpace

typedef GPB_ENUM(GraphSpace_FieldNumber) {
  GraphSpace_FieldNumber_NodeSpace = 1,
  GraphSpace_FieldNumber_EdgeSpace = 2,
};

GPB_FINAL @interface GraphSpace : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Space *nodeSpace;
/** Test to see if @c nodeSpace has been set. */
@property(nonatomic, readwrite) BOOL hasNodeSpace;

@property(nonatomic, readwrite, strong, null_resettable) Space *edgeSpace;
/** Test to see if @c edgeSpace has been set. */
@property(nonatomic, readwrite) BOOL hasEdgeSpace;

@end

#pragma mark - Graph

typedef GPB_ENUM(Graph_FieldNumber) {
  Graph_FieldNumber_Nodes = 1,
  Graph_FieldNumber_Edges = 2,
  Graph_FieldNumber_EdgeLinks = 3,
};

GPB_FINAL @interface Graph : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) FloatTensor *nodes;
/** Test to see if @c nodes has been set. */
@property(nonatomic, readwrite) BOOL hasNodes;

@property(nonatomic, readwrite, strong, null_resettable) FloatTensor *edges;
/** Test to see if @c edges has been set. */
@property(nonatomic, readwrite) BOOL hasEdges;

@property(nonatomic, readwrite, strong, null_resettable) IntTensor *edgeLinks;
/** Test to see if @c edgeLinks has been set. */
@property(nonatomic, readwrite) BOOL hasEdgeLinks;

@end

#pragma mark - Image

typedef GPB_ENUM(Image_FieldNumber) {
  Image_FieldNumber_CompressionType = 1,
  Image_FieldNumber_Data_p = 2,
  Image_FieldNumber_ShapeArray = 3,
  Image_FieldNumber_DimensionMappingArray = 4,
};

GPB_FINAL @interface Image : GPBMessage

@property(nonatomic, readwrite) CompressionType compressionType;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

/** (H, W, C) or (H, W) */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *shapeArray;
/** The number of items in @c shapeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapeArray_Count;

/** (H, W, C) to [0, 1, 2] */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *dimensionMappingArray;
/** The number of items in @c dimensionMappingArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dimensionMappingArray_Count;

@end

/**
 * Fetches the raw value of a @c Image's @c compressionType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Image_CompressionType_RawValue(Image *message);
/**
 * Sets the raw value of an @c Image's @c compressionType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetImage_CompressionType_RawValue(Image *message, int32_t value);

#pragma mark - Space

typedef GPB_ENUM(Space_FieldNumber) {
  Space_FieldNumber_SpaceType = 1,
  Space_FieldNumber_ShapeArray = 2,
  Space_FieldNumber_DataType = 3,
  Space_FieldNumber_LowArray = 4,
  Space_FieldNumber_HighArray = 5,
  Space_FieldNumber_Min = 6,
  Space_FieldNumber_Max = 7,
  Space_FieldNumber_NvecArray = 8,
  Space_FieldNumber_CharsetArray = 9,
  Space_FieldNumber_DictSpace = 10,
  Space_FieldNumber_ListSpace = 11,
  Space_FieldNumber_GraphSpace = 12,
};

GPB_FINAL @interface Space : GPBMessage

@property(nonatomic, readwrite) SpaceType spaceType;

/** also the n of the MultiBinary */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *shapeArray;
/** The number of items in @c shapeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapeArray_Count;

@property(nonatomic, readwrite) DataType dataType;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *lowArray;
/** The number of items in @c lowArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger lowArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *highArray;
/** The number of items in @c highArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger highArray_Count;

/** start of the Discrete, min_length of the Text */
@property(nonatomic, readwrite) int32_t min;

/** n of the Discrete, max_length of the Text */
@property(nonatomic, readwrite) int32_t max;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *nvecArray;
/** The number of items in @c nvecArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nvecArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *charsetArray;
/** The number of items in @c charsetArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger charsetArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, Space*> *dictSpace;
/** The number of items in @c dictSpace without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dictSpace_Count;

/** Tuple and Sequence */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32ObjectDictionary<Space*> *listSpace;
/** The number of items in @c listSpace without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listSpace_Count;

@property(nonatomic, readwrite, strong, null_resettable) GraphSpace *graphSpace;
/** Test to see if @c graphSpace has been set. */
@property(nonatomic, readwrite) BOOL hasGraphSpace;

@end

/**
 * Fetches the raw value of a @c Space's @c spaceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Space_SpaceType_RawValue(Space *message);
/**
 * Sets the raw value of an @c Space's @c spaceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSpace_SpaceType_RawValue(Space *message, int32_t value);

/**
 * Fetches the raw value of a @c Space's @c dataType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Space_DataType_RawValue(Space *message);
/**
 * Sets the raw value of an @c Space's @c dataType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSpace_DataType_RawValue(Space *message, int32_t value);

#pragma mark - Data

typedef GPB_ENUM(Data_FieldNumber) {
  Data_FieldNumber_SpaceType = 1,
  Data_FieldNumber_Box = 2,
  Data_FieldNumber_Discrete = 3,
  Data_FieldNumber_MultiBinary = 4,
  Data_FieldNumber_MultiDiscrete = 5,
  Data_FieldNumber_Text = 6,
  Data_FieldNumber_Dict = 7,
  Data_FieldNumber_List = 8,
  Data_FieldNumber_Graph = 9,
  Data_FieldNumber_Image = 10,
};

/**
 * Data is a point(instance) in(belongs to) the space
 **/
GPB_FINAL @interface Data : GPBMessage

@property(nonatomic, readwrite) SpaceType spaceType;

@property(nonatomic, readwrite, strong, null_resettable) FloatTensor *box;
/** Test to see if @c box has been set. */
@property(nonatomic, readwrite) BOOL hasBox;

@property(nonatomic, readwrite) int32_t discrete;

@property(nonatomic, readwrite, strong, null_resettable) BoolTensor *multiBinary;
/** Test to see if @c multiBinary has been set. */
@property(nonatomic, readwrite) BOOL hasMultiBinary;

@property(nonatomic, readwrite, strong, null_resettable) IntTensor *multiDiscrete;
/** Test to see if @c multiDiscrete has been set. */
@property(nonatomic, readwrite) BOOL hasMultiDiscrete;

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, Data*> *dict;
/** The number of items in @c dict without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dict_Count;

/** Tuple and Sequence */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32ObjectDictionary<Data*> *list;
/** The number of items in @c list without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger list_Count;

@property(nonatomic, readwrite, strong, null_resettable) Graph *graph;
/** Test to see if @c graph has been set. */
@property(nonatomic, readwrite) BOOL hasGraph;

/** Box space instance which is a compressed image (H, W, C) */
@property(nonatomic, readwrite, strong, null_resettable) Image *image;
/** Test to see if @c image has been set. */
@property(nonatomic, readwrite) BOOL hasImage;

@end

/**
 * Fetches the raw value of a @c Data's @c spaceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Data_SpaceType_RawValue(Data *message);
/**
 * Sets the raw value of an @c Data's @c spaceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetData_SpaceType_RawValue(Data *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
